(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    222426,       4325]
NotebookOptionsPosition[    220140,       4247]
NotebookOutlinePosition[    220539,       4264]
CellTagsIndexPosition[    220496,       4261]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initialization Section", "Section",
 CellChangeTimes->{{3.4832976145155706`*^9, 3.4832976165624847`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SessionCPUTime", " ", "=", " ", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SessionRealTime", " ", "=", " ", 
   RowBox[{"SessionTime", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ValueQ", "[", "ShitIsSetUp", "]"}], " ", "\[Equal]", " ", 
     "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Needs", "[", "\"\<VectorAnalysis`\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Off", "[", 
      RowBox[{"General", "::", "spell1"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClientPool", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NumClients", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ClientList", " ", "=", " ", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<1103\>\"", ",", "\"\<1104\>\"", ",", "\"\<10.18.192.83\>\""}], 
          "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<1105\>\"", ",", "\"\<1106\>\"", ",", "\"\<10.18.192.83\>\""}], 
          "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<1206\>\"", ",", "\"\<1207\>\"", ",", "\"\<10.18.207.129\>\""}], 
         "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1208\>\"", ",", "\"\<1209\>\"", ",", 
            "\"\<10.18.207.129\>\""}], "}"}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1212\>\"", ",", "\"\<1213\>\"", ",", "\"\<10.18.207.84\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1214\>\"", ",", "\"\<1215\>\"", ",", "\"\<10.18.207.84\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1165\>\"", ",", "\"\<1166\>\"", ",", "\"\<10.18.192.75\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1167\>\"", ",", "\"\<1168\>\"", ",", "\"\<10.18.192.75\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1712\>\"", ",", "\"\<1713\>\"", ",", "\"\<10.18.207.48\>\""}],
            "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<1714\>\"", ",", "\"\<1715\>\"", ",", "\"\<10.18.207.48\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1252\>\"", ",", "\"\<1253\>\"", ",", "\"\<10.18.207.87\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1254\>\"", ",", "\"\<1255\>\"", ",", "\"\<10.18.207.87\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1255\>\"", ",", "\"\<1256\>\"", ",", "\"\<10.18.207.27\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1257\>\"", ",", "\"\<1258\>\"", ",", "\"\<10.18.207.27\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1247\>\"", ",", "\"\<1248\>\"", ",", "\"\<10.18.207.92\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1249\>\"", ",", "\"\<1250\>\"", ",", "\"\<10.18.207.92\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1890\>\"", ",", "\"\<1891\>\"", ",", "\"\<10.18.192.150\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1892\>\"", ",", "\"\<1893\>\"", ",", 
            "\"\<10.18.192.150\>\""}], "}"}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1233\>\"", ",", "\"\<1234\>\"", ",", "\"\<10.18.192.69\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1235\>\"", ",", "\"\<1236\>\"", ",", "\"\<10.18.192.69\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1227\>\"", ",", "\"\<1228\>\"", ",", "\"\<10.18.192.161\>\""}], 
         "}"}], ",", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<1229\>\"", ",", "\"\<1230\>\"", ",", 
             "\"\<10.18.192.161\>\""}], "}"}], ","}], "*)"}], 
         "\[IndentingNewLine]", "*)"}], 
        RowBox[{"{", 
         RowBox[{
         "\"\<1198\>\"", ",", "\"\<1199\>\"", ",", "\"\<10.18.192.56\>\""}], 
         "}"}], ",", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1200\>\"", ",", "\"\<1201\>\"", ",", "\"\<10.18.192.56\>\""}],
            "}"}], ","}], "\[IndentingNewLine]", "*)"}], 
        RowBox[{"{", 
         RowBox[{
         "\"\<1243\>\"", ",", "\"\<1244\>\"", ",", "\"\<10.18.192.160\>\""}], 
         "}"}], ",", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1245\>\"", ",", "\"\<1246\>\"", ",", 
            "\"\<10.18.192.160\>\""}], "}"}], ","}], "\[IndentingNewLine]", 
         "*)"}], 
        RowBox[{"{", 
         RowBox[{
         "\"\<1262\>\"", ",", "\"\<1263\>\"", ",", "\"\<10.18.192.87\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1264\>\"", ",", "\"\<1265\>\"", ",", "\"\<10.18.192.87\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1242\>\"", ",", "\"\<1243\>\"", ",", "\"\<10.18.192.67\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1244\>\"", ",", "\"\<1245\>\"", ",", "\"\<10.18.192.67\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1738\>\"", ",", "\"\<1739\>\"", ",", "\"\<10.18.192.146\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1740\>\"", ",", "\"\<1741\>\"", ",", 
            "\"\<10.18.192.146\>\""}], "}"}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1728\>\"", ",", "\"\<1729\>\"", ",", "\"\<10.18.192.60\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1730\>\"", ",", "\"\<1731\>\"", ",", "\"\<10.18.192.60\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1698\>\"", ",", "\"\<1699\>\"", ",", "\"\<10.18.192.80\>\""}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<1700\>\"", ",", "\"\<1701\>\"", ",", "\"\<10.18.192.80\>\""}],
            "}"}], ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1196\>\"", ",", "\"\<1197\>\"", ",", "\"\<10.18.192.77\>\""}], 
         "}"}]}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"{", 
         RowBox[{
         "\"\<1198\>\"", ",", "\"\<1199\>\"", ",", "\"\<10.18.192.77\>\""}], 
         "}"}], "*)"}], "\[IndentingNewLine]", "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Connect", " ", "the", " ", "Server", " ", "with", " ", "the", " ", 
       "Clients"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AddClient", "[", 
       RowBox[{"{", 
        RowBox[{"Port1_", ",", "Port2_", ",", "Host_"}], "}"}], "]"}], ":=", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConnectString1", " ", "=", " ", 
         RowBox[{
         "Port1", " ", "<>", " ", "\"\<@\>\"", " ", "<>", " ", "Host"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ConnectString2", " ", "=", " ", 
         RowBox[{
         "Port2", " ", "<>", " ", "\"\<@\>\"", " ", "<>", " ", "Host"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ClientPool", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{"ClientPool", ",", 
           RowBox[{"LinkConnect", "[", 
            RowBox[{
             RowBox[{
             "ConnectString1", " ", "<>", " ", "\"\<,\>\"", " ", "<>", " ", 
              "ConnectString2"}], ",", 
             RowBox[{"LinkProtocol", "\[Rule]", " ", "\"\<TCPIP\>\""}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"NumClients", "++"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{"AddClient", ",", "ClientList"}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ShitIsSetUp", " ", "=", " ", "True"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQfeUc+//Ozy8dOQNXMnYB6SvrkxfOBtIC6+oXg+hX
fQtOgGhZjj0XQPSWlrNXQPSLhuCbILr6w/M3IJolf9k7EH0+g/cbiK57kQum
HbjkTs4D0hHPd30C0bVsLRfnA+kCtslg+k1tQMkCID0x6P9yEM1UFiq2EEjP
+ZQoBaInCDAGbAXSrmsvpoHoWUZ82SBaxbgGTHNeKGoC0ecexU4E0WIXarbf
AtLFZ5N2gOgtWqXSd8E0vyyEdlYC06tKwLRC96+lL0D+4XBdDaLv9MhMZvry
0jFk+rEpIFrd7c8LbiCt6Rr9GkTrHqr4BKLfHhT4DBZ3cP8OoutsF/0F0SKW
Ghw8QHreDmdOEA0AXWnOIw==
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Input Section
\
\>", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", " ", "=", " ", 
   RowBox[{"1", "/", "30"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meshconstant", "=", 
   RowBox[{
    FractionBox["length", "h"], "-", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadfunction", "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], "+", 
    RowBox[{"Sin", "[", 
     RowBox[{"4", "*", "\[Pi]", "*", "y"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", " ", "0.0001"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"4", "*", "\[Pi]", "*", "x"}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", "*", "\[Pi]", "*", "y"}], "]"}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constant", " ", "=", " ", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831278343069334`*^9, 3.483127834713189*^9}, {
   3.48312791666649*^9, 3.4831279232758646`*^9}, {3.4831279533071146`*^9, 
   3.4831280048696146`*^9}, {3.48312804316649*^9, 3.48312804985399*^9}, {
   3.483130001416558*^9, 3.483130002791558*^9}, 3.483130198010298*^9, {
   3.4831309174099994`*^9, 3.483131041245031*^9}, {3.4831316122192545`*^9, 
   3.483131612516122*^9}, 3.4831321970027757`*^9, {3.483133996561973*^9, 
   3.483134005264931*^9}, {3.483134190120757*^9, 3.483134193964433*^9}, {
   3.4831350888585253`*^9, 3.4831351151375895`*^9}, {3.483135419881668*^9, 
   3.483135422647152*^9}, {3.483135460879569*^9, 3.4831354610514355`*^9}, {
   3.4831391241778593`*^9, 3.4831391254904013`*^9}, {3.4831643223600006`*^9, 
   3.483164323359988*^9}, {3.4831676092085533`*^9, 3.483167631989512*^9}, {
   3.4831677506442432`*^9, 3.483167753222335*^9}, {3.483170320470724*^9, 
   3.4831703323611965`*^9}, {3.483170804542653*^9, 3.4831708047145257`*^9}, {
   3.4832167051932306`*^9, 3.48321670569324*^9}, {3.483216763678728*^9, 
   3.483216764491244*^9}, 3.483217073247172*^9, {3.483219436463561*^9, 
   3.4832194469168863`*^9}, {3.483220945258154*^9, 3.483220953070804*^9}, {
   3.4832215545979786`*^9, 3.4832215596137*^9}, {3.4832918858021784`*^9, 
   3.4832918869896555`*^9}, {3.483292419505407*^9, 3.483292425958284*^9}, {
   3.483292547840588*^9, 3.483292549668573*^9}, 3.4832926922826195`*^9, {
   3.4832938974419575`*^9, 3.4832939040201664`*^9}, {3.48329408086618*^9, 
   3.483294082975582*^9}, {3.483294647418514*^9, 3.4832946500593414`*^9}, {
   3.4832948769781723`*^9, 3.483294893369007*^9}, {3.483296600700218*^9, 
   3.4832966051848803`*^9}, {3.483297608718584*^9, 3.483297609734228*^9}, {
   3.483297657000761*^9, 3.4832976599226923`*^9}, {3.4833019635360384`*^9, 
   3.4833019678328857`*^9}, {3.483302017035696*^9, 3.4833020180513144`*^9}, {
   3.4833135401102533`*^9, 3.4833135852349644`*^9}, {3.483322925040059*^9, 
   3.4833229252588077`*^9}, {3.483391396834802*^9, 3.483391396959802*^9}, {
   3.483391523584802*^9, 3.483391524522302*^9}, {3.4833923899086223`*^9, 
   3.4833923907679915`*^9}, 3.48339264178201*^9, {3.4833938166338663`*^9, 
   3.483393819290099*^9}, {3.483395952770251*^9, 3.483395953551501*^9}, {
   3.4833981635227575`*^9, 3.4833981639602547`*^9}, {3.4833987254879107`*^9, 
   3.4833987353315973`*^9}, {3.4834080836537666`*^9, 
   3.4834080837631397`*^9}, {3.4834092768939652`*^9, 3.48340929017513*^9}, {
   3.483410154560223*^9, 3.4834102604814205`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["FOMesh Generation", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenNodeX", "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{"h", "*", "i"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GeneratePlateFunctions", "[", 
    RowBox[{"x0_", ",", " ", "y0_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"a", "*", "x"}], " ", "+", " ", 
       RowBox[{"b", "*", "y"}], " ", "+", " ", "c"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlateT1Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "-", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "-", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT2Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "-", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "+", "h"}], ",", 
           RowBox[{"y0", " ", "-", " ", "h"}]}], "]"}], " ", "\[Equal]", " ", 
         "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT3Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", " ", "+", " ", "h"}], ",", 
           RowBox[{"y0", "-", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "+", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT4Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "+", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT5Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", " ", "-", " ", "h"}], ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT6Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "-", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "-", "h"}], ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plate1Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT1Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate2Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT2Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate3Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT3Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate4Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT4Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate5Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT5Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate6Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT6Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ReturnSet", " ", "=", " ", 
      RowBox[{"{", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate1Solns"}], 
        ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate2Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate3Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate4Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate5Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate6Solns"}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ReturnSet", "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FOMesh", " ", "=", " ", 
   RowBox[{"Outer", "[", 
    RowBox[{"f", ",", 
     RowBox[{"Map", "[", 
      RowBox[{"GenNodeX", ",", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         FractionBox["length", "h"], " ", "-", " ", "1"}], "]"}]}], "]"}], 
     ",", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"GenNodeX", ",", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         FractionBox["length", "h"], " ", "-", " ", "1"}], "]"}]}], "]"}]}], 
    "]"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.483131444458694*^9, 3.483131444880553*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlateFunction & Gradient Generation", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PlateFunctions", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", 
    RowBox[{
     FractionBox["length", "h"], "-", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{
     RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{
       RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PlateFunctions", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
      RowBox[{"GeneratePlateFunctions", "[", 
       RowBox[{
        RowBox[{"FOMesh", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"FOMesh", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4831314287405477`*^9, 3.483131429724885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Robertisanass", "[", "p_", "]"}], ":=", 
   RowBox[{"Grad", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Cartesian", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GradientFunctions", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", 
    RowBox[{
     FractionBox["length", "h"], "-", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{
     RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{
       RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"GradientFunctions", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Robertisanass", ",", 
        RowBox[{"PlateFunctions", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4831314350215564`*^9, 3.4831314354902887`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["LoadVector Generation", "Section",
 CellChangeTimes->{{3.4833020344574594`*^9, 3.483302035582452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenerateBounds", "[", 
    RowBox[{"x0_", ",", "y0_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{"a", "*", "x"}], "+", "b"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"PlateT1Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", 
         RowBox[{"y0", "-", "h"}]}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "-", "h"}], "]"}], "\[Equal]", "y0"}]}], "}"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"PlateT2Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "+", "h"}], "]"}], "\[Equal]", 
         RowBox[{"y0", "-", "h"}]}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", "y0"}]}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT3Line", "=", "PlateT2Line"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT4Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "+", "h"}], "]"}], "\[Equal]", "y0"}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", 
         RowBox[{"y0", "+", "h"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT5Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", "y0"}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "-", "h"}], "]"}], "\[Equal]", 
         RowBox[{"y0", "+", "h"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT6Line", "=", "PlateT5Line"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate1Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT1Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate2Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT2Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate3Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT3Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate4Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT4Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate5Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT5Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate6Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT6Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ReturnSet1", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate1Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate2Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate3Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate4Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate5Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate6Bound"}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ReturnSet1", "]"}], ";"}], "\[IndentingNewLine]",
     ")"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Solved", " ", "via", " ", "call", " ", "to", " ", "generatebounds"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BoundFunctions", "=", 
     RowBox[{"IdentityMatrix", "[", "meshconstant", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", " ", "\[LessEqual]", " ", "meshconstant"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", " ", "meshconstant"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BoundFunctions", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"GenerateBounds", "[", 
         RowBox[{
          RowBox[{"FOMesh", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"FOMesh", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], 
      "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4831314741138053`*^9, 3.483131474645035*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stiffness Matrix Generation", "Section",
 CellChangeTimes->{{3.4833161244126186`*^9, 3.4833161293969936`*^9}, {
  3.483317319686699*^9, 3.4833173377490835`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MeshCoordinates", "=", 
   RowBox[{"HoldForm", "[", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i", " ", "=", " ", 
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"Node", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], 
         "]"}], " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j", " ", "=", "  ", 
       RowBox[{
        RowBox[{"Quotient", "[", 
         RowBox[{
          RowBox[{"Node", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], 
         "]"}], " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "j"}], "}"}]}], "\[IndentingNewLine]", ")"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NodeNumber", "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{"(", 
     RowBox[{"i3", "+", 
      RowBox[{"meshconstant", "*", 
       RowBox[{"(", 
        RowBox[{"j3", "-", "1"}], ")"}]}]}], ")"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InnerProduct", "=", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"titties", " ", "=", " ", 
       RowBox[{"ReleaseHold", "[", 
        RowBox[{"MeshCoordinates", "/.", 
         RowBox[{"{", 
          RowBox[{"Node", "\[Rule]", " ", "Node1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i1", ",", " ", "j1"}], "}"}], " ", "=", " ", "titties"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"vaginas", "=", " ", 
       RowBox[{"ReleaseHold", "[", 
        RowBox[{"MeshCoordinates", "/.", 
         RowBox[{"{", 
          RowBox[{"Node", "\[Rule]", " ", "Node2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i2", ",", " ", "j2"}], "}"}], "  ", "=", " ", "vaginas"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"IP", " ", "=", " ", 
       RowBox[{"HoldForm", "[", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"FirstBullShit", " ", "=", " ", 
           RowBox[{"\[Epsilon]", "*", "0.5", "*", 
            RowBox[{"h", "^", "2"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"DotProduct", "[", 
               RowBox[{
                RowBox[{"GradientFunctions", "[", 
                 RowBox[{"[", 
                  RowBox[{"i1", ",", "j1", ",", 
                   RowBox[{"PlateA", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", 
                RowBox[{"GradientFunctions", "[", 
                 RowBox[{"[", 
                  RowBox[{"i2", ",", "j2", ",", 
                   RowBox[{"PlateA", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
              "+", 
              RowBox[{"DotProduct", "[", 
               RowBox[{
                RowBox[{"GradientFunctions", "[", 
                 RowBox[{"[", 
                  RowBox[{"i1", ",", "j1", ",", 
                   RowBox[{"PlateB", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", 
                RowBox[{"GradientFunctions", "[", 
                 RowBox[{"[", 
                  RowBox[{"i2", ",", "j2", ",", 
                   RowBox[{"PlateB", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], "]"}]}],
              ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"SecondBullShit", " ", "=", " ", 
           RowBox[{
            RowBox[{
             SubsuperscriptBox["\[Integral]", "0", "1"], 
             RowBox[{
              SubsuperscriptBox["\[Integral]", 
               RowBox[{"BoundFunctions", "[", 
                RowBox[{"[", 
                 RowBox[{"i1", ",", "j1", ",", 
                  RowBox[{"PlateB", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "1"], 
              RowBox[{
               RowBox[{"DotProduct", "[", 
                RowBox[{"\[Beta]", ",", 
                 RowBox[{"GradientFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i1", ",", "j1", ",", 
                    RowBox[{"PlateB", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
               "*", 
               RowBox[{"PlateFunctions", "[", 
                RowBox[{"[", 
                 RowBox[{"i2", ",", "j2", ",", 
                  RowBox[{"PlateB", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
               RowBox[{"\[DifferentialD]", "y"}], 
               RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
            RowBox[{
             SubsuperscriptBox["\[Integral]", "0", "1"], 
             RowBox[{
              SubsuperscriptBox["\[Integral]", "0", 
               RowBox[{"BoundFunctions", "[", 
                RowBox[{"[", 
                 RowBox[{"i1", ",", "j1", ",", 
                  RowBox[{"PlateA", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]], 
              RowBox[{
               RowBox[{"DotProduct", "[", 
                RowBox[{"\[Beta]", ",", 
                 RowBox[{"GradientFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i1", ",", "j1", ",", 
                    RowBox[{"PlateA", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
               "*", 
               RowBox[{"PlateFunctions", "[", 
                RowBox[{"[", 
                 RowBox[{"i2", ",", "j2", ",", 
                  RowBox[{"PlateA", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
               RowBox[{"\[DifferentialD]", "y"}], 
               RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"ThirdBullShit", " ", "=", " ", 
           RowBox[{"constant", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubsuperscriptBox["\[Integral]", "0", "1"], 
               RowBox[{
                SubsuperscriptBox["\[Integral]", 
                 RowBox[{"BoundFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i1", ",", "j1", ",", 
                    RowBox[{"PlateB", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "1"], 
                RowBox[{
                 RowBox[{"PlateFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i1", ",", "j1", ",", 
                    RowBox[{"PlateB", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "*", 
                 RowBox[{"PlateFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i2", ",", "j2", ",", 
                    RowBox[{"PlateB", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
                 RowBox[{"\[DifferentialD]", "y"}], 
                 RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
              RowBox[{
               SubsuperscriptBox["\[Integral]", "0", "1"], 
               RowBox[{
                SubsuperscriptBox["\[Integral]", "0", 
                 RowBox[{"BoundFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i1", ",", "j1", ",", 
                    RowBox[{"PlateA", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]], 
                RowBox[{
                 RowBox[{"PlateFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i1", ",", "j1", ",", 
                    RowBox[{"PlateA", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "*", 
                 RowBox[{"PlateFunctions", "[", 
                  RowBox[{"[", 
                   RowBox[{"i2", ",", "j2", ",", 
                    RowBox[{"PlateA", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
                 RowBox[{"\[DifferentialD]", "y"}], 
                 RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], ")"}]}]}], ";"}], 
         "\[IndentingNewLine]", ")"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"FirstBullShit", " ", "=", " ", "\"\<Null\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SecondBullShit", " ", "=", " ", "\"\<Null\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ThirdBullShit", " ", "=", " ", "\"\<Null\>\""}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i2", "\[LessEqual]", " ", "meshconstant"}], " ", "&&", " ", 
         RowBox[{"j2", " ", "\[LessEqual]", " ", "meshconstant"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Location", " ", "=", " ", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i1", ",", " ", "j1"}], "}"}], " ", "-", " ", 
            RowBox[{"{", 
             RowBox[{"i2", ",", " ", "j2"}], "}"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "If", " ", "that", " ", "shit", " ", "is", " ", "to", " ", "the", 
            " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Location", " ", "\[Equal]", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PlateAA", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"4", ",", "6"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"PlateBB", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ReleaseHold", "[", 
              RowBox[{"IP", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PlateA", "\[Rule]", " ", "PlateAA"}], ",", 
                 RowBox[{"PlateB", "\[Rule]", " ", "PlateBB"}]}], "}"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "If", " ", "that", " ", "shit", " ", "is", " ", "to", " ", "the", 
            " ", "down", " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Location", " ", "\[Equal]", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PlateAA", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"3", ",", "5"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"PlateBB", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", "6"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ReleaseHold", "[", 
              RowBox[{"IP", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PlateA", "\[Rule]", " ", "PlateAA"}], ",", 
                 RowBox[{"PlateB", "\[Rule]", " ", "PlateBB"}]}], "}"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "If", " ", "that", " ", "shit", " ", "is", " ", "to", " ", "the", 
            " ", "down"}], " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Location", " ", "\[Equal]", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"PlateAA", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"2", ",", "4"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"PlateBB", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{"1", ",", "5"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ReleaseHold", "[", 
              RowBox[{"IP", "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PlateA", "\[Rule]", " ", "PlateAA"}], ",", 
                 RowBox[{"PlateB", "\[Rule]", " ", "PlateBB"}]}], "}"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "Location", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Location", " ", "\[Equal]", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"FirstBullShit", " ", "=", " ", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"\[Epsilon]", "*", "0.5", "*", 
                 RowBox[{"h", "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"DotProduct", "[", 
                   RowBox[{
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "m"}], "]"}], "]"}], ",", 
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "m"}], "]"}], "]"}]}], 
                   "]"}], ")"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"m", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"SecondBullShit", " ", "=", 
              RowBox[{
               RowBox[{
                SubsuperscriptBox["\[Integral]", "0", "1"], 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"BoundFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "1"}], "]"}], "]"}], "1"], 
                 RowBox[{
                  RowBox[{"DotProduct", "[", 
                   RowBox[{"\[Beta]", ",", 
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "1"}], "]"}], "]"}]}], 
                   "]"}], "*", 
                  RowBox[{"PlateFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "1"}], "]"}], "]"}], 
                  RowBox[{"\[DifferentialD]", "y"}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", "0", "1"], 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", 
                  RowBox[{"BoundFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "2"}], "]"}], "]"}]], 
                 RowBox[{
                  RowBox[{"DotProduct", "[", 
                   RowBox[{"\[Beta]", ",", 
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "2"}], "]"}], "]"}]}], 
                   "]"}], "*", 
                  RowBox[{"PlateFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "2"}], "]"}], "]"}], 
                  RowBox[{"\[DifferentialD]", "y"}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", "0", "1"], 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"BoundFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "3"}], "]"}], "]"}], "1"], 
                 RowBox[{
                  RowBox[{"DotProduct", "[", 
                   RowBox[{"\[Beta]", ",", 
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "3"}], "]"}], "]"}]}], 
                   "]"}], "*", 
                  RowBox[{"PlateFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "3"}], "]"}], "]"}], 
                  RowBox[{"\[DifferentialD]", "y"}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", "0", "1"], 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", 
                  RowBox[{"BoundFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "4"}], "]"}], "]"}]], 
                 RowBox[{
                  RowBox[{"DotProduct", "[", 
                   RowBox[{"\[Beta]", ",", 
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "4"}], "]"}], "]"}]}], 
                   "]"}], "*", 
                  RowBox[{"PlateFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "4"}], "]"}], "]"}], 
                  RowBox[{"\[DifferentialD]", "y"}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", "0", "1"], 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", 
                  RowBox[{"BoundFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "5"}], "]"}], "]"}], "1"], 
                 RowBox[{
                  RowBox[{"DotProduct", "[", 
                   RowBox[{"\[Beta]", ",", 
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "5"}], "]"}], "]"}]}], 
                   "]"}], "*", 
                  RowBox[{"PlateFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "5"}], "]"}], "]"}], 
                  RowBox[{"\[DifferentialD]", "y"}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", "0", "1"], 
                RowBox[{
                 SubsuperscriptBox["\[Integral]", "0", 
                  RowBox[{"BoundFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "6"}], "]"}], "]"}]], 
                 RowBox[{
                  RowBox[{"DotProduct", "[", 
                   RowBox[{"\[Beta]", ",", 
                    RowBox[{"GradientFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "6"}], "]"}], "]"}]}], 
                   "]"}], "*", 
                  RowBox[{"PlateFunctions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "6"}], "]"}], "]"}], 
                  RowBox[{"\[DifferentialD]", "y"}], 
                  RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ThirdBullShit", " ", "=", "  ", 
              RowBox[{"constant", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "1"], 
                  RowBox[{
                   SubsuperscriptBox["\[Integral]", 
                    RowBox[{"BoundFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "1"}], "]"}], "]"}], "1"], 
                   RowBox[{
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "1"}], "]"}], "]"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "1"], 
                  RowBox[{
                   SubsuperscriptBox["\[Integral]", "0", 
                    RowBox[{"BoundFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "2"}], "]"}], "]"}]], 
                   RowBox[{
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "2"}], "]"}], "]"}], "*", 
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "2"}], "]"}], "]"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", 
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "1"], 
                  RowBox[{
                   SubsuperscriptBox["\[Integral]", 
                    RowBox[{"BoundFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "3"}], "]"}], "]"}], "1"], 
                   RowBox[{
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "3"}], "]"}], "]"}], "*", 
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "3"}], "]"}], "]"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "1"], 
                  RowBox[{
                   SubsuperscriptBox["\[Integral]", "0", 
                    RowBox[{"BoundFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "4"}], "]"}], "]"}]], 
                   RowBox[{
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "4"}], "]"}], "]"}], "*", 
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "4"}], "]"}], "]"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "1"], 
                  RowBox[{
                   SubsuperscriptBox["\[Integral]", 
                    RowBox[{"BoundFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "5"}], "]"}], "]"}], "1"], 
                   RowBox[{
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "5"}], "]"}], "]"}], "*", 
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "5"}], "]"}], "]"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
                 RowBox[{
                  SubsuperscriptBox["\[Integral]", "0", "1"], 
                  RowBox[{
                   SubsuperscriptBox["\[Integral]", "0", 
                    RowBox[{"BoundFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "6"}], "]"}], "]"}]], 
                   RowBox[{
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "j1", ",", "6"}], "]"}], "]"}], "*", 
                    RowBox[{"PlateFunctions", "[", 
                    RowBox[{"[", 
                    RowBox[{"i2", ",", "j2", ",", "6"}], "]"}], "]"}], 
                    RowBox[{"\[DifferentialD]", "y"}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], ")"}]}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
      "FirstBullShit", " ", "+", " ", "SecondBullShit", " ", "+", " ", 
       "ThirdBullShit"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     ")"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4833161389126186`*^9, 3.4833162567403765`*^9}, 
   3.4833162868026843`*^9, {3.483316318943104*^9, 3.4833164903951316`*^9}, {
   3.48331657030087*^9, 3.4833166680658693`*^9}, {3.4833167330498285`*^9, 
   3.483316758455916*^9}, {3.483316796377548*^9, 3.4833169672514544`*^9}, {
   3.4833170150480237`*^9, 3.483317168406417*^9}, {3.483317268577651*^9, 
   3.4833173016711893`*^9}, {3.4833174314828587`*^9, 3.48331743438909*^9}, {
   3.483317691262446*^9, 3.4833177202153854`*^9}, {3.4833177502620687`*^9, 
   3.483317773980666*^9}, {3.4833180361977386`*^9, 3.4833180399320893`*^9}, {
   3.48331814924389*^9, 3.483318152853242*^9}, {3.483318632678296*^9, 
   3.4833186749436502`*^9}, {3.4833189745979824`*^9, 
   3.4833190603630586`*^9}, {3.483319111845951*^9, 3.483319596755227*^9}, {
   3.483319700314475*^9, 3.4833197231109123`*^9}, 3.483322355762452*^9, {
   3.4833225433550014`*^9, 3.483322571401697*^9}, {3.483373024609375*^9, 
   3.48337303040625*^9}, {3.4833731365594883`*^9, 3.4833731550122757`*^9}, {
   3.4833732143085375`*^9, 3.483373217660631*^9}, {3.483373364990035*^9, 
   3.4833733673657913`*^9}, {3.483373607650491*^9, 3.483373633372329*^9}, {
   3.4833744064208384`*^9, 3.4833744388699026`*^9}, 3.483378370471275*^9, {
   3.4833784483755302`*^9, 3.4833784510317125`*^9}, {3.48337855338879*^9, 
   3.4833786155298133`*^9}, {3.483381123539775*^9, 3.483381129352275*^9}, {
   3.4833813847176914`*^9, 3.4833813900607915`*^9}, {3.483383117789486*^9, 
   3.483383169273861*^9}, {3.483383387663536*^9, 3.483383411600883*^9}, {
   3.483383621708913*^9, 3.4833836327713423`*^9}, {3.483383777145418*^9, 
   3.48338379637967*^9}, {3.4833841964083605`*^9, 3.483384218330095*^9}, {
   3.4833846934557467`*^9, 3.4833847145185165`*^9}, {3.4833851005376334`*^9, 
   3.4833851030220084`*^9}, 3.4833852907720084`*^9, {3.4833853246001334`*^9, 
   3.4833853499907584`*^9}, {3.4833856627715254`*^9, 
   3.4833856629433994`*^9}, {3.4833857908644557`*^9, 3.483385799161278*^9}, {
   3.4833858817544994`*^9, 3.4833858883638315`*^9}, {3.48338619725248*^9, 
   3.4833864677850084`*^9}, {3.483386515865903*^9, 3.4833865162878017`*^9}, {
   3.483386555868207*^9, 3.483386620246915*^9}, {3.483386664546341*^9, 
   3.4833867459092765`*^9}, {3.4833869593495083`*^9, 
   3.4833870203659143`*^9}, {3.4833874293034196`*^9, 3.483387431475294*^9}, {
   3.483388042269472*^9, 3.483388042753844*^9}, {3.4833889573642817`*^9, 
   3.4833890333183784`*^9}, {3.4833894751471443`*^9, 
   3.4833894905377693`*^9}, {3.4833895606471443`*^9, 3.4833895621471443`*^9}, 
   3.4833896347721443`*^9, {3.4833896917408404`*^9, 3.4833897461154923`*^9}, {
   3.483389800083897*^9, 3.4833898158494215`*^9}, {3.483389891317688*^9, 
   3.4833899079582067`*^9}, {3.483390152503516*^9, 3.4833902350342383`*^9}, {
   3.483390523142147*^9, 3.4833905240171976`*^9}, {3.483390605037489*^9, 
   3.483390607943907*^9}, {3.4833906670723124`*^9, 3.4833906873859825`*^9}, {
   3.483390747576949*^9, 3.4833907543742156`*^9}, {3.4833907893918576`*^9, 
   3.48339085575333*^9}, {3.483390896425726*^9, 3.4833909543795924`*^9}, {
   3.4834054607729297`*^9, 3.483405462569793*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplacian Operator, Stiffness Matrix Evaluation (Parallel)", "Section",
 CellChangeTimes->{{3.4833070959868712`*^9, 3.4833071116433215`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SendAck", "[", "client_", "]"}], " ", ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{"client", ",", " ", "\"\<Ack\>\""}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FullMessageList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SendMessage", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{
     RowBox[{"ClientPool", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Inner Product Stiffness\>\"", ",", 
       RowBox[{"FullMessageList", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StiffnessMatrix", " ", "=", " ", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", "meshconstant", ")"}], "2"], "]"}], " ", "-", " ", 
    RowBox[{"IdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", "meshconstant", ")"}], "2"], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831291766479883`*^9, 3.4831291901323633`*^9}, {
  3.4831293118823633`*^9, 3.4831293125229883`*^9}, {3.4831370954543457`*^9, 
  3.48313709682939*^9}, {3.483137289273048*^9, 3.483137385853594*^9}, {
  3.483139030482668*^9, 3.48313903065456*^9}, {3.4831672271509438`*^9, 
  3.483167238853919*^9}, {3.4831672715097513`*^9, 3.4831672739940944`*^9}, {
  3.483168733912907*^9, 3.4831687404596987`*^9}, {3.4833076025843945`*^9, 
  3.4833076143343945`*^9}, {3.4833080367403502`*^9, 3.4833080383965893`*^9}, {
  3.4833101844453545`*^9, 3.4833101964921527`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FullMessageList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "NumClients"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"k", "\[Equal]", "NumClients"}], ",", 
       RowBox[{"UpperBound", " ", "=", " ", 
        SuperscriptBox["meshconstant", "2"]}], ",", 
       RowBox[{"UpperBound", " ", "=", " ", 
        RowBox[{"k", "*", 
         RowBox[{"Quotient", "[", 
          RowBox[{
           SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
          "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"LowerBound", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}], "*", 
        RowBox[{"Quotient", "[", 
         RowBox[{
          SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
         "]"}]}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FullMessage", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "GradientFunctions", ",", "PlateFunctions", ",", "BoundFunctions", ",",
         "MeshCoordinates", ",", "NodeNumber", ",", "InnerProduct", ",", 
        "LowerBound", ",", " ", "UpperBound", ",", " ", "meshconstant", ",", 
        " ", "\[Beta]"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FullMessageList", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"FullMessageList", ",", " ", "FullMessage"}], "]"}]}]}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"SendMessage", ",", " ", 
    RowBox[{"Range", "[", "NumClients", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StiffnessVector", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"LinkRead", ",", "ClientPool"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StiffnessVector", " ", "=", " ", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{"StiffnessVector", ",", 
     RowBox[{"{", 
      RowBox[{"_Integer", ",", "_Integer", ",", 
       RowBox[{"3", "*", "\"\<Null\>\""}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InsertStiffnessData", "[", 
   RowBox[{"{", 
    RowBox[{"I_", ",", "J_", ",", "Data_"}], "}"}], "]"}], ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"StiffnessMatrix", "[", 
      RowBox[{"[", 
       RowBox[{"I", ",", "J"}], "]"}], "]"}], " ", "=", " ", "Data"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"StiffnessMatrix", "[", 
      RowBox[{"[", 
       RowBox[{"J", ",", "I"}], "]"}], "]"}], " ", "=", " ", "Data"}], ";"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"InsertStiffnessData", ",", " ", "StiffnessVector"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQbSR/fvrDzy8dly7bsABEx2xOegemjTneg+g3k/Q8
HgHpXRPZvEH0Pf5yfxDdxLc1CESv4PSIA9ElnYfBdN/H3dNBdFEhwwwQffSl
9yoQ/epF+BoQ/cCyVuYxkD688wCY9rty5CeI1r8ozfAESPvcLql9CqQvxX0G
0w5FkrOeAek/7xvmg2iRbZPsXwDpPaapDiA62qjYA0Qf0U0OBtHWzHq3XgLp
hiq5hyDaIMb0J4jOiTj9B0SLtb3/zfLlpaMA21cwPY+/2YILSDvwqtuB6D0T
Wj1AdLnQbzCtp/2mGUQn6/a1gejNZnsmg+ltL6dC6KhFEPENS0C022y7B4JA
Wlx6HZgGAKDU0Ks=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load Integral Definition", "Section",
 CellChangeTimes->{{3.4832986204231606`*^9, 3.48329862553283*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Zeros", "[", "x_", "]"}], " ", ":=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadIntegral", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"Zeros", ",", "6"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], "1"], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "2", "]"}], "]"}], " ", "=", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}]], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", " ", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], "1"], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "4"}], "]"}], "]"}]], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "4"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "5"}], "]"}], "]"}], "1"], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "5"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "6"}], "]"}], "]"}]], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "6"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831359659080124`*^9, 3.4831361049669523`*^9}, {
  3.483136158231214*^9, 3.483136220651491*^9}, {3.4831390088867064`*^9, 
  3.4831390243414135`*^9}, {3.483298706709381*^9, 3.4832987076781864`*^9}, {
  3.483321090317426*^9, 3.4833210963955126`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["LoadVector Evaluation (Parallel)", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SendAck", "[", "client_", "]"}], " ", ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{"client", ",", " ", "\"\<Ack\>\""}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FullMessageList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SendMessage", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{
     RowBox[{"ClientPool", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Inner Product\>\"", ",", 
       RowBox[{"FullMessageList", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadvector", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"Zeros", ",", 
     SuperscriptBox["meshconstant", "2"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831291766479883`*^9, 3.4831291901323633`*^9}, {
  3.4831293118823633`*^9, 3.4831293125229883`*^9}, {3.4831370954543457`*^9, 
  3.48313709682939*^9}, {3.483137289273048*^9, 3.483137385853594*^9}, {
  3.483139030482668*^9, 3.48313903065456*^9}, {3.4831672271509438`*^9, 
  3.483167238853919*^9}, {3.4831672715097513`*^9, 3.4831672739940944`*^9}, {
  3.483168733912907*^9, 3.4831687404596987`*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"n", "=", "1"}], ",", 
   RowBox[{"n", "\[LessEqual]", " ", "6"}], ",", 
   RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullMessageList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"k", "\[LessEqual]", "NumClients"}], ",", 
      RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"k", "\[Equal]", "NumClients"}], ",", 
         RowBox[{"UpperBound", " ", "=", " ", 
          SuperscriptBox["meshconstant", "2"]}], ",", 
         RowBox[{"UpperBound", " ", "=", " ", 
          RowBox[{"k", "*", 
           RowBox[{"Quotient", "[", 
            RowBox[{
             SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
            "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"LowerBound", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "*", 
          RowBox[{"Quotient", "[", 
           RowBox[{
            SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
           "]"}]}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"FullMessage", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LoadIntegral", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", "loadfunction", ",", " ", 
          "BoundFunctions", ",", "PlateFunctions", ",", "LowerBound", ",", 
          " ", "UpperBound", ",", " ", "meshconstant"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"FullMessageList", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"FullMessageList", ",", " ", "FullMessage"}], "]"}]}]}]}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"SendMessage", ",", " ", 
      RowBox[{"Range", "[", "NumClients", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"loadvector", " ", "=", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"LinkRead", ",", "ClientPool"}], "]"}], "]"}], " ", "+", " ", 
      "loadvector"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQHWRzYH3X55eOQXsWbgTTNqv2QmjzfSCa45yCUh+Q
3ne6VhlEX1sgYAuizeZz2IHozOaTrSC6qsOkA0TLzZo7AUQHat6dDqKXBBxY
D6YvOG+G0Pe3Q8Qv7ITQtmch4nVg+vO5qaX9QLrv/BowXfJ9XjWI7vqTUAOi
r8voTZsMpLcuvTQDRLe9EzwJoks/rDsLoo/F5WbOBtIicU5ZIPpVVfkDEG1W
sfExiLb6t5F3LpDW+7cPTIs01y8A0TkNKxaDaKuTpU9BNJPnDjAtfVD5PYi+
4FADptu3fvgDonO38v8F0VcusJ3l/fLS8cAFSzANAEzXzUs=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"StiffnessMatrix", ",", "loadvector", ",", " ", 
     RowBox[{"Method", " ", "\[Rule]", " ", "\"\<Multifrontal\>\""}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4834049023233786`*^9, 3.4834049078702183`*^9}, {
  3.4834049498543243`*^9, 3.483404953260553*^9}, {3.483412220864729*^9, 
  3.4834122300052958`*^9}, {3.483412380379333*^9, 3.4834123896917734`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotmatrix", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "meshconstant", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], "]"}], 
      " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"j", " ", "=", "  ", 
     RowBox[{
      RowBox[{"Quotient", "[", 
       RowBox[{
        RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], "]"}], 
      " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotmatrix", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], " ", "]"}], " ", "=", " ", 
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"[", "n", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      SuperscriptBox["meshconstant", "2"]}], "]"}]}], "]"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"ListPlot3D", "[", 
   RowBox[{"plotmatrix", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4833974997457557`*^9, 3.483397550714179*^9}, {
  3.48339758968268*^9, 3.483397640291731*^9}, {3.4834090468016877`*^9, 
  3.483409049754794*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
keeXFpV/3ejF+1HjibxVghzn4RAZjbuj90F6VL5N4YSeJHW/aUDluqtrPwh+
hiNvlUBr8GijyecU1N4qgVHerQMej3KQt0pw4ltc+y0a2X6aU/mnu/zDc2YH
on6CEqRtKUl4WkL2Z+hUfr9kAuvSPTfkrRJw+K0NfVJJqJ+gBDPnqB6oEZC+
Man8J0NW617DSuStEvzLi5m6RqMUeasE445sWCDaux55qwRvXh83+tS5fvR4
LpUrRm8qPZ4QhvoJSsBf095ovykFeasE1zVUprcEk9/Xksp3cKTTTp4LQ94q
wfFtbnXRKbh/qwbM+fE9sU3kdY30Vg2OflCz9nJwQe2tGgxddzoXssMOtbdq
oHxcatZD3RTkrRo4PPPO7xkmOStRud2zY7fvD2VQn4P82f7YfhbPzRl5qwap
IvPvNifMQu2tGsgcHf49rBOFvFWDur4HFw178HiCGiS2iIi8/xeHvFWDi1Vb
2tpfLEHeqsHjl1EvNr+ej7xVg/E5lcO7FpDnrymVi5QMR3K9OMhbNfi7r9dr
z6G5qL1Vg2J1q1WJE4uQt2rgen6Vm0NYHPJWDU63LB2fGkZyZlD58Iv4p7ll
a5C3arA76YVv1LMI5K0a3K15c8kgi/SHTeVxDy6751RWIG/VYNwH0UjRyrXI
WzXwqN+fWnprK2pv1WBu7BsPrggfeasGeQdWhvv4+iJv1SAhLlFHcjlttL6A
yisOm3p7+CYgbzWB1+BHv68XgLzVhOeyz95vUvBE3mpCYuVuv50xmchbTaj0
H3/3RTnZz5en8tzgEr2h/bmovdWEI41nao6okvXVqHyG3/sT1iwG8lYTxtsP
FWtfIa/7WlQevkuboaKO21tNuN5X5py3OAJ5qwnuWY81mmi2yFtNqJ7fIex8
Oh55qwl0s12KCnWZyFtNKJwocda0oxi1t5rgkb9dfPcRLeStJiw6EFffJbEW
easJXpvMQ4VUyfaBTuW1J1atWnoQe6sJq62/qT75vRJ5qwmX2nw1vrcUIm81
4T7zw3GFD6tR/1YTgC3L/aKcjLzVhCRJVev6gzHIW00Qrna7eY9OQ94Sf8c/
+fkBBnnIW02Qjly+QG8qeV7zqbx+885+87W2qJ+gCSu+ZP3ezibvcwVUPmeo
q7HSMB55qwXqP0cqrfN1UD9BC2rMVs5jMsg6ElSu+/HTRjmvWNRP0ILSZS8H
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
SyqPlu6eHJoYifq3+tCfO81j4BrZnpDtrRHseTe0z5567yfZ3hrBPqc07X3U
cysS1PHv3XhJWUvR+76JnCf9vXPrGtex3hI5J2vjO9kdMWO9JfKrPdk1R7ho
H3gi1zC4TX/fHjjWWyI3Hndh/2GjnLHeEnlE0pop4tT6Nx0q9y3/bVYyLXqs
t0R+7MmGdWty1o/1lshlYj6qTOxH7y8g8sbb3NgjCpWovTWCce/r3929UzfW
WyJ3F5rmCQcaUHtrBCXMV2zpE/VjvSVyttfjg8Unt4/1lshftqrvNBVUjfWW
yL0n/BJjn0Xv8STy2PtHuwrtyXFOJpXvrykJbvmO3ptM5EsfVKywkiC/L5vK
Obozr8/ti0XtrREUTwoZeK6/cay3RL4ppVc3U23t6PE8KlfcbJv2WZn8/P+t
f/jtsJmjP47sn1hSuTZrUn/YLrJ9EFD53m7xE22yLmO97TSHBzru3mtmBI71
lsi//lFmta+LGestkQ9+bNKtO4Pe40nkRf27rx6qQf1bIp9/vC6o8il6H+L/
/15HXq6fJ3qPJ5GfSd853W4Les8RkbsfeNhZQu7jRHpL5FdKXnQb/Vo11lsi
j3uxPGG8K3pv8v9/rxHOnszV6D2eRM75/O22jSt6rxyRz2sOePveimzHTKj8
eoO/Xv/JlrHeErnYvivfjK3XjvWWyBuOHUw59xG9x5PIhb/HFjSFbx7rLZGf
LGuoqHRZO9ZbIpd+XzDRh3qvE4PKc2Z1TqqjrvtMKp+t232E2ZY31lsi58n0
CC0WTRjrLZGX5C3e37KCfD8Ch8rLLrWHLJ2B3uNJ5P/X1ZlHU911cZxCSCpF
IWTqRqEk05VOpqTSJCKUIiJToqIMKaQ8VBqUNKAHj1IqladyQ+nRQJImSWiS
SpNo8p673rt/Z53zV2t91o3f2vdr33P39+y95X/e1bDlQZ3fkuOpVaP+S+m0
oXWL+Z1r14zzoZ8RdIt5ec3Zwe8mjKV1K7xHUf5iWvVvZo5rvDFyLUo/5JLJ
7O3C/JJN1sh93N5Dae71jpem7rD9zOw5wrzu2xwt92hmHyLmTlWHP/V9Z3SL
+dZ6ndjdCsweT8yzUzY/m/aO2T+L+ZOf56TuHUqidYt5kewdZWVtZj8X5lmR
KOB1OrM3GfPoHT+X+sil07rFXFBplbFneSitW8w9Kn6PfOicz+RbY5QffHu6
vpIXrVvM7S7v/Oe3415at5iPbpvk1Dd2P61bzPl762reZSbTusXcNyFweaVM
Mq1bzJMe2awpsdtC6xbzGZ1VqfHxMbRuMVe3dXgS0cjUEzAfWbKhpvMisw8R
c++rtzbZPAindYt5jeZ+jwsrmb1ymC/5unXXU59gWrfCeI72nlYixuyLwXzT
YZtvnxJX07oVvu9Bb21jPWxo3WI+xGF189Ngf1q3yAT9+PVLZXiGL61bzPeF
XZVbGBpE6xbzTdsnXDMawOyVw7z8aYSYXSWzVw7zA/seKL7XjKR1i3mqQupH
72xmrxzmtamLrtv1MbrFXHJlnpWL31Zat5jLxo07uMU6ntYt5nk7NNAQSSbf
Yv71TeOtn/vsaN1ivqDAZJn/vGO0bjE3djd63ZwI3yMmctx8U15rqEI2rVth
fKzrTkr3JNK6xXxiidH+Q2uiaN1iHu04zbPHOonWrfB9aZ8f89p+C61bzIel
GpmH6G+gdYt5SJtTU05xBK1bYTwls3dJZTD7CzA/lTLLIXNxEK1b4T2Hzrq2
jiJ/WreYK2tXnykfx+gW8wY1tWMjtq6gdYt5/Ve5Ux/lmX2ImLfcSv37TdJy
WreYm96ZWTY7mNmHiPmZIwUvknN8aN0KzNDkUa6rT+Yye2kxH59yNOTUHmZf
DObWrl2mHduYPUeYj5tiU1Crw+gW81/mSZ7LXMJp3WIuZ1P9745o5nyL+Zbe
5XdcYG4Ad04wQ5vi5LP7DJg9R5ivjHLvLjZgzreYC155dnaWMHuOMD+T32Bs
4BdL6xbz6N6NqlUjN9K6xfyvCp8PcfrMniPMP2S1KPilMHUwzJv/vno+d0Yo
rVvM3+zpqdp7naknYO6y3m1U2g5mfwHmYQNNZwbtjKR1i7nv/Jm3GqIiad1i
fnVHaJ6TBOM7YD7f5nzfbcc1tG4x12kO+blgDrPnCPPjP8JTFRZ70rrFXN9d
4VrCDndat5ibd7gv/+DoRutW+P4+OGWo8ZuZp425lVKffwb48tw5Acfhmv3S
ikZmzxHm1/rWLLmq5kbrNt4C+RWdVfXV9ad1i7kSSm5S5+a0S3Ovb3SrmjJV
m5kDj/neetu2hKVBtG4xH+N6xblNl/1eZoFyxvjMK+XqSGM4nlmWnLhlKrPn
CPPm8yohA7TW0brFfI+fbEWVTBStW8w9U2NyOgIjad1i3n129Oforghat5j/
aBq0c4l9OK1bzP/KvK+Vsy6U1i3mH7RXDC18HETrFvN/I/ul975ZTesW85vr
N3SnevvTusXctKs5qJnbm0DuJ6xzl5PmN3rTusV8oZWisVKfB61bzBXc5/rL
envTusX88CVHpSvt3rRuMa98OLTwuLQXrVvMH03jW/63ewmtW8wvXjhjsXgQ
s3cD82INg75OPrN3A/N823yfBjVm3zfmsZbujfKfmL0bmLc9dWl1cnOkdYv5
vqF34rf5MN/LEB/N0k7/5d3PnG8xb91+YVifPJNvMX8lnvO49sIqWreYP3dY
GjVglz+tW8zln2n3yTUw+wswF5edqqjvyeyLwVwwL7y3Yn4orVvMYzP4lbzR
obRuMY/MbbH13xVK6xbzHg/vzsZjIbRuMc+ziNbLzwqidYt50L06S693jO+A
+dEEJ+X315j9BZh/G5Jy9eZgZn8B5oV2h62sL6+kdYv5og8hD9rDV9K6xbyu
akROy+uVtG6F8c/7uibJ0IfWLeY3v29WX9fE7IvB3GjX5O/zxMyYcwIfbdq2
t+jZvanMOYGPHJVnBPYVzqZ1i/mMYvNHPx2YfTGYS2iZJzxBi2jdYn5uXNLd
1VrMniPMNey3KC72dqZ1i3lx7FYNj4y5tG4xf4ye9w+5Z0/rFnP7tqmHLWxB
579E/0qhH3H3u4YXQNzkEfDXw/PdT8H9QLERHA/4aJhv5AI+8iiOX/TtqH3g
ArpV5fi09GvKjrKQ/zU4bor8D+0v0P3/z4nX5Pjqk/craoJEn1PxuhznRy/O
keuH+zw8jq/oTnONbYd5y3ocT71x0MDcE+5ZTeD4me0xE67AeS/egOMDQu8U
Pr4rykvxRuT3psseL0pD///5AnKvoLZ/zUw5R+iLIfcKDi75kbHeT7S/XkDu
Fbxo/mPbNxXm8JB7Ba2LfMaut5YRvZ7cK3j6S9DuNkw0f0BA7hV81R2erLBZ
9PcuIPcHvOf6iUXYivxNAbk/IN+l/KUlWXQfVUDuD8T5/JoVfFDUzy4g9wcK
yiSMzMxFeVhA7g80J55y3/wSPr96Rf8qIJSZaaLcLpo/ICaHgFcOevT2rg7c
o1Di+IGX4yUD5+uK/r8KxzOyjDLHPoT8qc7xJ+mnxG9sA99Wk+O+YooK8omg
N12On97SJvtAD+5L6HH89vqfAVvXQR6YwPGAYMmGkqVw3jbguMuzsLLfN0X6
FDPieO2LJvHiRXA/mfj19Z1Wha8i4B4y8eUvPm7PTc4F3RJf/pubuvv1QzCH
mfjylTObnU/OWyTSM/Hl31W8Kmg6C33ZxH/3e+UvrT0K+uWJz+5SESlvaA33
rIjPbrrRcfGsCOgHJz57Uhp/9pS78DnyVfSvMpLwUlPotIH3VxYBf370zwK/
Irhnosjxbcn7u3mmcI5S47j3MP/ck63wnMQHv56Vsa5cDPZEEL87ckNZWWO3
KF/FE1/b0jx0krkT9CMT/zpIOTDszT9wr5v41zd5Vr+M7KDvmPjUH8fNDvph
A/d1iR89rDQgqaeNJ+LEd45SrS21D4L5fsR3lu/ymNOUJfJBEPGXfUcnSM8I
F/W/I+Ijb3V4XXrloug8iYhffOO61qCNlfB5KsrP8dpotMzzBpstfFGcRfkZ
86sBsT9MjsC5awTH6yysLA0lbOn8jPmlrFVm94LAD1XlOGrJuV8yHOafaHC8
qrxEzW+E6F4c5GfMl62rdjC/CPM3dDn+9vsMnoM46IrHcYtjZalqPdCPr8fx
U1PaajvvpdL5WegLSyyLPa3H5Geh33r+fFriWcjnRuT37lk6tOk69I8TP3dP
Ton8r73AiZ/7Z+tkfZMlorqZgPi5f0ZtV3q3TTSnQkD8XEFagMo/Q+H1xM8d
81Rj5BpL6Bslfq5RcEfISagPCIhvuyJHvXVOFOwpIL5tQ09L/ZvN8HOIbzv0
jNyAN+fheYhva657e4YgMpnOz5g/ib1q7fQA5tVAfuahYoMlNf0xoCvIzzzk
bdWguOIm6EGJ45ZyKgvzR8P3bhWOP66L3VFxHPKnOsfHfrwctDRamcnPPLQ9
x31F9keo8+hyvHX5zo99zROZ/MxDju5P+4aUg389geMzLq1VsnJm8zMPHXh8
IX1eBvgsRhyvNrk8QDMT+oOIT3pUbkHN+vnQZ0T80OTdR6PPrgI9Ez9U8vcD
t7FP4B448UMz56e5TVoO/drED93+983oyzdF/ng88T3nH9i41URe9PcVT/zN
m07FHbsu+Yk48Td/hF/pGx0P9/OJv9kVOswkrAXO4aL8HK+PtnrwdDu/wnlb
lJ8xb5r//H6bL7xekePvTxfNnD4TXq/G8XnRJd3WAjj/EP9xEj/GcHMexIf4
jHqLfd0vDodzGvETA6bK1hbfhPgT33DGiYDtm3bD3G/iG96YmTsya3c+nZ8x
V0icoiZrc5zOz0L/TuZOXr/+Tjo/Yz62qmpooxb0DxK/z/mC1WG5YpirSXy9
I3NnDrurAP3OxL+TMJZtMXSFOe3Ep5OQlXz3UAbqqKL8LJiErIxMY+pD4Puy
KD8L7yOXOi5TGg3xH8Hxc54nPiVrQD1hFMfD1651TOTqBqocf/g4a5V7DNS7
NDi+8mzhXv0LcB7Q5LjgSPZYg+wUOj9jHmu8wlxXC/rEeRwv2xLe05UJXI/j
5dslP5X6QP/gBI7Lj0JXbp0upvOz0Nc7cnLy9HHwd2HE8fETlPgVccfp/Iz5
6Bq3fUP40D9LfLTT3h4q7R/S6PyM+SnzQXk3j0IfMfHRZGOzti1bAnme+Gjv
a++pvtoN523io6Wcaxn4BuZtCohfNnh3jfOX99DHRPwym2MyguunYU4X8cvW
7NZVXP0IzuHELysxXHOxq8ONzs+YJ8bsVXNJgu9TovwsvJ/eW7bbxhD+HkX5
GXOFL9oOWyJBP0ocz/sY9FoM+vEhP2OeLnPD86oO+LDqHA8XGLw9z/mMmhxX
muRv+2gi+LC6HI+dPdd072nQmx7HezeuWz1uIty3nMDxuSqqD0eeO0znZ8xL
lvu0z70L91WMOK6ZPN9Lvh3OycSfUggZcM9jBZwHiA9Vv2VNWFQc7NsiPpRk
ZLJL7wY47xEfan2l47W3S2E+LfGhbnm32xkuhHMF8Zt6ux32HTsG50niKxln
aS6d9RnyIfGVHlZ+N2jygHlTxFcKevdyiM0rqFOJ8jMyQbHq/gMu60DdUpSf
MX995pyslRaTnzF3M3NeNHsRvL9qHJfODdUp5z6niO/zIT7R27MQ/t6Jv7Ok
8XXdSF34eyQ+zgr17rQsh4N0fsa8Jk9jYuBN+Hwkfo2p3S0vc1PIq8SXcTbT
GajzNpHOz0LfxGq6R/nsjXR+xnzElVJxo28wX4v4LEdkDv6TFxJI52fMCxTE
nHOvQx8u8U0aZ5UH5r/woPOz8HlCFscdCYJ6DuRnM5Q/2bK6jKsbQ342Q2rl
JzSmIqh3jeA4muk428QJ6q6jOP5DXMluBA/qtKocz17eP+4h5ztrcLy6x7os
yAX6NDU57vowt0O9Dbgux1MuqDv6V0BfOY/j+kp5zX6G8H1Tj+NNX590Su2H
nzOB48/iNiooHobzgwHHPSYHGX16DNyI4wWFF0ofxEN/K/Evmg+b5Hh9gv4+
4l+M1sl5dMMD+qmJf9Gzlr/LLRH6+Ih/ETmnvP91K8ypI/7Fi3l/nGK7Ye4l
8S/qo5+UrvaC+gPxKV66aga9fAd5lfgUly9b3rb/6sLkZxy3XTztr1bAiU9x
OcjywK4uZyY/m6Fb6/Rtot3Bv4D8bIEmfRqcumwFm58tkHro7srEuaArJY7f
rQ1L2svdR1Lh+K1/3v6eYg66Uue4im26gqYc6EeT49UpSo0vj4K/oMtx+ZcH
xXO/AdfjuEOFVqdcFnzvnsDxjXdjOzZ+Bz/agONrT844FZEFz2/E8ebxFSqL
P0C/FfEFoqNyavKKgZP6v7NqaNIkL+iDJvX/zsMp4ZfMoD+R1P+XpCk8uXYH
vteT+r/UQddYiwJ4PanzO+/rUXMtAk7q+Ves323rkYE5tKSe/1y1VOzjPdjX
Ser5Y3R45/r6oI4K+ZmPkj59Wjs9EOpIkJ/5KGf6/oyEL/B5rcjxigfjlN9E
QtzUON4h1lp6qBvqGKTevky2+s+tc9D/SOrqM97eqZS1gNeT+rld9HFzt7XQ
D0jq5B0N8qvqUuH7NamTb/9iZrZizEomP/PRn/8UvL65Ayd1b61P13rt1KG/
mNS3HaZkhPR26zP5mY/2TO9vlLeFebykjm1ukDit6Sf0mZJ6dVTZJF3ZedAf
R+rSX+YPyrFXhD41if9z4ZzM490JFTBfWkyb41lv73eXB8N8D9IvE/PJs0HJ
UbQnMZ70p1zV0XqiJgbnlgEirowGzTDeMYKb+zqc4+aVUu3rT4BOtDielGtU
nw57FuJJn0VnZESq6VzoXyZ9ECUxOuJi52CePOl3uFfc8/2GL8Sf9COIj3lh
LRELe0ZI34HrjbPqnzfD/lOID/6ee3bW3Dhf6LPQ5rh0qvOQv14FM/HhofGS
bUtjzsJ5gNzLXdz52OvnzL/o+AjnTW3JfJ7aOpeOD+bGioEek6p86PgI7z1W
yhSO+J1Ixwfz0l6BkXzPPjo+mH8MfzNeougQHR/M8zrFXTMz99HxwbxeOgbV
mIu+FyNy3/KvooDg5z476fjgc9dFxVXBYty9HW2OL57otzAuOI2Oj3CuiyBO
/6pWJh0f4X0qj6YT61JD6Pjgc4V84t+7bf1W0fER3t/IlpiuE7KWjg/mvbZy
6mO/b6Tjgzn/XdqqRrUIOj7Cc5fKAntrn3V0fDDXWqvwo5rbt0Lun0xo0g7+
3rqK1g/mzYrL3tvmQX0G4mOBzsteW3OuJYCJjwXy6M6IK1gVycTHAr2cs8HP
/KMfEx8LVNr8ImColysTHz56G//my4gAXyY+fLQm6v1/ZlBn4OLDR6ovLP8d
A/dR44mfqNnSXj3v30AmPnwU1uV0+nPCCiY+fDTilJZsy9QVTHz4aOt+vb9l
uxYw8eGjWXoeel6q4K/BHC0pNGzB4NiHLTYiXSlzvHerzsKJfPDLiN/UECaw
V1+iJco/pI/VYN/cDYu2sXsrpFD0kdwBDtKi+g8ivo/p4wO3R76E+jzxa2TD
Ss1yJrLz86XQbS23nYPFEPOcCqiuqfla2ln4nkL6E29ayw9elcv0y2PueJBn
1zUzkPn5Cqj9/Q6JUaPn0PER1hVbn5+4EAVxUOZ4g/vT/8q4/Rek3qvn+/RX
2H1mnirmI482y5y5zewVwnyddsDU7MPMXCzMraT6s80imP0CmMc2xpxd9CiK
fn7M+w/czRzvF87Eh4d++lWkFJ5fzMSHh/xXekkVdjPzXjD/5jSxZFGvZwUd
Hx7SmLfcVKsggY6P8J6tvGlVL+yhgN+LucF9CW3PS8w8DcxrXWRSxkxj5olh
nuYqkK0JYuY+Ce8z57j8l5+QTj8n5gPFvVungh8RT+oVqVdeTl/6kpl/Jaw/
LBs5xP0rM48a/x6Z4MjgAtVNzPtljNAJe0HYyOPM+2KMckvyQy9vimbib4z0
Jh0e7hvK7LvH5+qdyCFw1Rs2PmbIao5B6rw8Zp8F5sXd0nm/9zLzajD/4zIy
/8z8SCY+Zqi1qn5hgSCKiY8Zer36beXJzeFMfMyQpYZ9wfh/mfn5mNeMlTTR
rlrIxMcCmfjmj/sCc9XiyT2crZMLB8qVMfsyhPdJfgZ2vXBi9u9gHuJY6iL1
RDQHRgzmGyug3OdPt2losvs+FNBQ8ezPc26BL0DOP1X1P39l19lOh+cGnmbh
ahqiHsf8fGX08kd7aPs4vQp4HfBxiq0tB4bMY36vMvL1rCtKlF1Avy+Y37o/
8fJAe3bfgTJa2ab2WlDFzMMRnpeiwn5+2eXEPKcyepsYbvFRLbEC4gIcRWif
Gp/TcZV+fh46XO3RllJqyjwnD5UvbNurCd+jBeT8M4c/RUP8I7sPmoeGOxmo
ph1Np+MjrDOPP2ggfYqdj6ePWsx0WuvlV9G/V1gPH3Q6ni/N7KnBXOfi77vL
NXbTz4P5eufy2NJqZl8h5ju/ufAjYc6tgJx/Ft7bbBcR9heT9/TRDL3TaQ0V
4MPC8xuj+Ndzfx0zYuZpYP69fqHX2T87mecxRt9S/eVN3qczv9cYSV4tE1P6
HkDHR1iPSu6XenGHmS+E+ZWDR5IuuzBzhDA3DEvw6CrZTscH8weGY4/VR6TR
z4O5mqxPjqEl87mAeXXaasl3NszcP+F9XW+L7ru+zN404T3ntn0ZRSrLmffX
AtlPtqn/KsbOC8Xnn2lS6TcCmPlOwvt12UUBqQbsvGULNLV21gLj0sVMfPho
d4JPW9pnJu9hfvxAv2FjbQATHz4a8OzvJ13FzJ5rzC2Nnu0rHMvMw8FcclNM
X3oYM88E8zOWSyqdYf6AgJx/jGZNaZ9et5CJDx+V3bs3a876+dP/B5r92sA=

   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHkcVcP/xu+958zcI1tEQnZCKdEqUimkrNlF2pTSqqzZyU62VEqkxVak
7JUtUoqQNVkSXySyy/573p7x+v3xec1z5p51zpyZzzyf53N36Dm4y6BKqVT6
JJZKmcrtZGUZdU+EUmm0QNe8VHpSeIzwycJPCY8TPiV33Xmy8yve9xzZubKn
ZRNkd8qe1f73qeyl/Z8OrusmPE94inAP4bnCk4S7Cz+vcnLFvz2u+ltUnqT6
Z4SnCfcUnq9yasXbc2UTZXfJzpIdLzuBa2v/41S2y31fJ3Ie2VjVd1K5n+rH
CR8m3Fq4v8pDK94eIDtcdoRsiKyL7GhZP1nntN9tsrPTMw9Nvx8jGyY7tuJr
Twy+lwNytwvX7yp7TnZPes4Jwce1zd2OJ9O2PE/wvu1Vf3dwXQfhOcHPeipt
ovLuitvuMdXfxHOqfrLe30jZlbIV2r5C5SV6we8LXyh8ofAdKi8oeXuS7PKS
9/sw93GXap8HVF4vu4E+kru8QvXTVd4oGyX7SPVXq7xM9VNVXlXy9gTZRbKL
ZffJrpVdJ/s4d3m59h+nckS6j3tl16T9xutZjtKztNG+y3Of4yLt/4HwpZyT
ewhuryNVN17lhbKLZDNUf4HKo1T/sPBlvBvhh4Qv4V3m7r8jKt7vweB3c4Tq
ZwpfwXsUflT4RvoS7c/zpTaapA/kctkVsom0a8n3NFnbI2VXymbp2GvoAzp2
tvB19EvhR4Svon8I8+EdWfFz3hHc1/bPfU/deL+y/6k+6lmvVf0q4X9Ud5Xw
J8LrhK8Qfkv4A7474WXC79MnhTfWcd8L/yD7UPXfqbw09zlWyj6VvRtcjlD9
7ypXsK/sL9nHsk9kC2UP0E6yt7X/R3zz2r+i838m/LmsLLyq4u13go87X/v8
kc7HMW/LnpA9KVtGf+X7ls3X/rNU9tX+S1U+UvH2a7KZaft17fOGyuHa543g
48/KXTdb9qjsBdU/rLIPY4jwDOHThJeofKji3xYGfzMDVP9S8PX7Cb8cPI6c
Ifxi8PlOF35F5fSKz/VccBv0Vv0vKt+ruK3f47ulD2d+J8srfh/va/8v6Jf6
/f7gceGw3H1hYMXvf1rwWNMpd385o+Jt+mxv7r/i8W94xWPbA8Hl4bn7ck9Z
r4q/+zMrvsak4L5zYO7vobush+ye4H0P4jtWObjise2+4PHr0Nz9nTq27w2+
x86qfy/4PV8gPDV4rDwk97fSh3fHM6t+jcqLVZ+rLf5X8fNvKLy24v63Qvt8
q/IS7bO+6r+peLsQXq3ya9l6mUvORd//UuVXtGtweZGOnRJ8zY6MVbyrisfm
ycFtdnDu74w67vVl2f2pH4/RPh1V7ksf4Dkrnp9eCZ5XBjGv6X2eV/J7fUPb
/VSepXs5RWUbWVtZd9kBsvayU2Xt0vbzuetO0/5dVbaW7S97LvdxvVXfW+VB
soMpg8eS1apfqe35shdl9VXfTvWvqb67ygNk7WUNgsulqu+psoPsQNkeweXr
qv+Y+5C9gOm6B6rsw/4qO5S8/Wzu++ql+heFOwmfLrwk93MOEV4kfKzwQOEz
VR5T8vZC1R+tcoDqF+d+zsHCw1UeJzte1ld2SMnn7SPrmLaf0f77qeyp/ecI
NxU+hTbRvR8kO1g2V/XNaVfVzxNuKdxDeH7uNusrfKLKfUs+Vzcd07bs9jot
naOjrGFw+Yb2n6jyEtmlsrGy82UjOEb7nKPyc+2zv/AQ4U+Fh6k8Vnac7K50
3GW0dXD5lfbpIHyx8JfC7YUvFP5CuCnzvvB7ws2ETxJ+X3hv4aOF3xE+T2VX
2cm82+B7+Z/qJ6i8qOzz3iG7oOzzvqRnP1TP2k/77KL9m6pukfBOwnsKvyy8
u3Br4VeF92IOFX5beJDKI8vebsxco/It1fdVeYisk2yA7PCyf9tT+xyqcpn2
OUPlYem3RsH7vpm5nbqU/Tzbqb6eyvmqryfcXPgV4e2FdxN+UXg34X2Flwj3
U9m57GvsqPqGKhdk/s46l/ycQ2RdSu5nZ8gOkx0uWy6bK5uHr0I/5tuS/YQ/
pHIsfkL6ne3vVf+EytGqf0/l07I5sh9zl2NU/47KJ2VPyX7IXd6u+lm5feLO
wrOFd+A+hN9S+XjJ5/059/XHMYbl9oFuZG5M48jVwl/k9hWuE26lsq5sG9ky
2WPpXN/hc6i8jfsRPpvxR/hWxp6St1fm9rlGqn5p7nFkmPCbudvobOHRKs+R
nSt7O/d3ex73nLtNzxV+LfdYcKbwqyofls2UfZu7vIWxObefdzPXUvmIbBbj
oWx2yff6kOwm9pGtzf37rdr/3dzXH5H5291KtjXHqH4nlUeofobwpsInCNdX
uYFsQ1kT2eay2pxf+2ym8iT6s8paJW9PV31NxhrV76lyk5LPtYdsI9nGsoap
ZL8FuftOf+0/kOvLjpQ9mPuax/CNpLqj6CO5r9dV9U/lvsaJwi/n/v0M4Udy
P1N3/GTmM/qr8LTc66dOwo8J1+Ocwo8L70Z/Fn4i9zMfKzxTeEvGMOEnc9/3
8ZnHvzol//aw6rdQeXLm8ZK2YXsXWVVWlNyu+pRKWsqV7mUOVnlo5j7L2o7t
+3L/frgq7hdej2fOfI+cg23usUbJz/OmTviuHuZs7fsTvl3F268F+1Vnqr5O
9Dw5QDdSL9r3P1t492g//zzh3aL9+nOFt4r29wcJV6O/9VOFG0b37RHC60W/
rx7CIXoO6SZcO7pfnSFcK/qb6C+8fvS761V1AzC/nShciZ4vugrn0fPPKcIN
otcy5wvvHL3eOUt46+j10GDhv4Pn8RO4t6r90YZqpD2EXxXeQ3hP4deFGwk3
F/5ReG/h/YX/FG4h3JZzCbcUbiH8s3AT4X2FfxNuJrxj9NpruOq2iV7vDBHe
ILq/9RbeLnqdMVR4H9mvOrapjt2vat+9ufAO0WuUYarbNHoe7idcM3re7iu8
UfSYeprwx8K76dhfhFcIryf8s/A78AHC33Md4XbCuc6/RPg35j7Vvy1cwa8T
Xi5cFf5R+D3hIPwDbcCz4Mfp2G21/azwjsKbCY8V3lr4Ne3zh875terqyuap
fnvVbyn8lPC2wlsJzxHeTri28B3C2wg3EX5LeC/hpTrPnzrPGtW9Ify38DfC
Xws30z5/CX8hvJfwH8JfCTcR/pP+KVskvLvOU194sXB94c+0TyPh31T3ufCe
wr8LrxFuLvy38LfCLYX/qZpHqS/8q/CnwnsIrxNexkeHryv8nXCrij+4H4Vb
C1eEfxZuI5wJ/yC8n3BZeC8d86bwnsIHVP0x7yPcvup1VyvhTbT/PuldF8KN
07fDd9Ek9Z8awnunb2Rj4RapP/A9npr6fF3hHqnvbSZ8Qvq+thTulr7Z44R/
EB4tfILwT8JjhDeknVO/ai48VvhS4c2FT0rf7BbCJ6exog/9R+9osvAxwt+p
/jbhbYV7pX6+l/AtwhcJv8y18JGE7xN+Ej9H+AHhp/GHhR8UnoMPLDxDeB6+
n/CuwgPS+LOLcP80Ru0kfHr69hmjBqbxqpHwMOELhbcXPi19U3sID01jVFPh
24UvEa4vPDiNJ3yDfdK3vLfwbcIX8/1WzfvspPd1tOrXqv5W1XUV/lX4DuFO
Va+F9tc+r1CPb6m6hcI/41sK7xk933JvB0bzJtcKH8J4qmNb69iDGTeF9xM+
lHcv3Eb4QOFMeF/hX4J95y6qO5JxQfXtOFbnvF/11zE+Ba8Rjhb+I3j9cqzw
4YxN2r+t9v8reN1zvOpO0rG/CI/jfoQfFL5euLPwDOEbhE/lexe+U7iH8F/C
dwkfJfyN8M3Cvfle9LyThHvyLWvzbuFTGH+ExwsfIfy18Cjh/aM5miuF2wrf
I3yVcAfhacLXCB8gPEX4au5f+CvhG4VbRPNQlwnvK3yn8BXCrYXvEh7JeCs8
Xvhy+o9sgd7jrnr2elWvLXcT3kn4ReFdhKfp3q+WXSObKrsqbd8nu1Z2HeuT
4N/XqB0PCa77RrgzPJ7wWuFD4T+Fv8NnUDkurQmOCC5/xA9ReavsNtljsjFp
fTNDNqrsc82WjZbdLntYdnPZ531KNr7sNcfhwcf9oHMeFny+7+HZVN6YzvWA
7HrZDbITg6/9F/6kypllbx8XvN/v+Esq70/HHRv8/L+p/nWVs9J9HRW8vvpZ
9ScE39+fwscHP8MfwkcG3+NPmb/vO8tez3UKvpdvVT831XGuRbIHy773JbKH
0nO/kuo4b5dgLu+XzHPd54wtsq7Bbf0P6/3g85bl55wq/JxwJtwNHkm4gg8e
fI1C+LTgtlhP+OTg9sXx6g63IJwL9wq+jyo+eHAbReHFwXzEYOFXg7mnofj1
wh9qn41zcx6HVMxfHxzMNX6t++zBscIhT/xHxRzHScF94m/t87vKFWWfi3ny
I9nHvGPZMtlbsr7B5fo6z48q35a9Izs9uNwg9zj0ruw92i6V79NfGWtlb8r6
BJc14E6Cf99QeADcoHBN4bLub5XwZ/ShdC/8NhBOUuUm2qc/3KbwRsLrVC4v
e/sf2cqy92PtfmLZa2zeyd1lv1fe1T1l87KNda1NZbXgj3TODfBDdM7dVa5f
8fb5wfe0reovFC6EdxC+NPi4XYT3VrmZbPOKfYFN0nkbyjaW1ZTVgLvSNb+R
DQtu3y107AVwufg2wucFP8M2wg3gyGQbwYsFn2Nn1V8cXLdT7ntZzbsumw+D
FwuJM2O+YNyvVM2FbaDxpyw8kmcTrll1rKKO8KbCtwtvia8o/ALXEs6Fr+Y+
hP/BhxRej7Edn1O4KvybcHvhILxe1RzipsKF8PW0RWH+6p+Sx+v1VT+KNlf9
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
         "]], Polygon3DBox[CompressedData["
1:eJwtnAf8l9MXx599HyErMlNSyU5ooIyUyEioiKSBUKIi429WFFlJSUhURCmk
oWQkouxNImVkj2z+n3ef5/XqvLrnufcZ3+e5955zPudzfvXO6H98vySKoiuz
KNK/6Kc0isbFUTRbckweRX+EKOqgAUdJPi+i6HfpR6rdXvIZusZP0djnJSdo
/HM6trH6LlB7XhlFv2n8EdLbSVaq72/pHdU+TvKV9F90/gSdO09ynM7ZWOdM
Vt8DkkxjY+knq91V8pPG/6NjndQ+XrJW+p/S91J7b8ka6f9KPyHxmG+kn166
r4l+3CK1v9b/d+qez+q3Hqb+X9W+V/deIOmo+/+n80/S+BMl36k/0jld1O4s
+UH6bxp/v8Y+I+mk8Vvoel+qnau/v/Ra0r+WHqSfL32dxt8n/WnJ8dITXe+U
xL/pZ13vZ/WPV98cybHq/1P6NLVflJwk/Qfpt6n9qKSD9F11/lc690vJrnrW
Vpnf5XmSO9XfWP1f8C4ku6h/naSt2odLPtH9aqp/itpn6Lyxav+qY92k36Zz
n5e+G+9I+v/Uf6/ajSSfS18laaBr/abxp6k9WuMXq6+u5EPpH0i2V3/rzN+m
v2S8xvRW/8FqN888vmHpa10q/R61d5esTXzP3XX+HtK/SXxsD+m7SF+d+Bka
Sv9Lcqzax0i+0LO0zDy3eknG6H4HZp6rZ0nGSv9L72+63t3Lks7MZ+kPqv2C
5ETpqa5/auJ3wLv4Uf23q2+W5Ojc8+voxGtgtfozje+e+B3wLrbU/b7R2A2k
D9D4XupvpXazzO/z79Tfbpmki/oPyvzs50jGVfPhoMTn/KLrHZB5bfWR3KH+
13VsO7UvVvspjc0lPaSfLvmD9ZD6WV+VdNWYozK/+xskU6QP0/jXNOZw9ffX
+A2kT1TfvZL/pH+r8RPU/5Km+pHSL9bvHaH29ZJG0odIHxn52C7Sz5F+sdoX
SbaUPlj6dWoPlzSQPkj6MLWHSupLvyj4WlfrHpfp3jvqmV5V+zA9z3nqv1D9
19AvqSt9gPSr2I8kdaT3k36Z2pdKtpF+XnD7Ml3jEl3vKj3/j/otNaV/rGu3
Uv82an+q9ivqP1f6JRo/RFJb518QfK8rNOZS9Q+Ufm3kZ6in/hbSa6nvE53/
svqbSd9c+grpS6VfIOkpvZXG/6FjY3T/naUfIvlJ+u3Sd1K7teRH6XdIb6R2
G8nP0sdKb6x2W8kv0gvJbLUD8433oev3kn6wrv+X+gZJP1N6O+mJ+kfr/LrS
D5L8oP6+er7B6hskqaX+WzL//v0l36q/v/ovj/wOt1X/rerfTn3NJd+p/wnp
vfke6v9X+kDdrw/zRXqk8bepfwfpLSXfq/8K6d/qfdeQ/qH083X9KzT0f5Lt
NX4B30+/5UrJjdILXW+Cxt8l+Vv6Jjp/hfr+kpyj82tIf1PtHyR9pG8o/W21
f5KcKX0j6e+q/YvkLOll6bnbXcfHqB0k90i/W/KPrn9w5r37Au6p8ZtK/1Tn
/is5l2+oMbXUN0jt+Tp3c/WvVl+iY/2wP9I/kP6b5Gzpm0lfFfPyNfd4Pp0z
Se37JLF+60bS7098LJFeo3Tf6TrvjtL2c8/ENor9o6aOf6Tr/SHpq+t1yPys
N0mm5t4X2R8jvd93c+/D7I1B+gfSL8+89+fS389tt7+XvpH0j6QvZH7H/gaj
eB/B3/sz9S3T8xwePH8+l75c+qjM83svydc6dlPm+d9Eslb6d/p/VGybdKT0
dsHzezXrWOcfmdn2jJBM1rFjguf3l+xd2CLeg/T5+kkH6nlulr6V9KaSb/j9
wevjC7Vf0/idJB/rWh9J6qhvTfC3/xWbqPPrq39F4jE7qu9tySex59RM9b8j
fWXsY7OkN2TP0r3fyLz/7MEeIP1t6ZdLfyv4XObljeyV0t+X/h6/WWNfDW4z
Bx+Svjy4zbwcqfGD9Oxn63odJIt17JXg+cs8HqH+l6W/FXuOT9b5bwR/f+bB
Dcwd1pHOXSj5Rcfuk/6O2nPxxaQv0/h3Yl9zqs5fKv0NtV+XPCD9OY1viP2R
bKF3+Kb6P459jxnqf136h7Hn9CPs7xp/vq7dSfKirj+x2kN/0PvcR2O31phT
1fdK5v0Ve3OY+tpI/lTfCJ1/V+Q1/4HGDEn9Pk+UvCR9cOr3fYzkBekXSe+n
dkfJEu4n/S21n5T8KH0Y/k3kPewd6ddLvzPynvW+9Bm6/2Id213Pf6Huf53a
d0Te099T/2vVGvgOH1DPv6PG9FLfq5n39+HY88g2610de1b6zrH328117nvB
65t1Pkrjl0i/Vfotkrt1rc+D96Kf8Rmkv6Tz91W7tmQbnf+i9H3U3lKyNTZD
egu1t5dsx37DXsxYybbSO+Pz6Vlq8Ny630OsO+nLJH/qGaaxLnh+9n/pD7NP
q/265G/pk7FNkf3XddIfwO6pvUjyK/NP+gG6Vx2eQfeYylrn3Ut+V/+D0tdE
tvd/SH8EOxX5m/wjfQp7BXNZ8ltm//vAxD4K/upz+AO69gjJHdKXYYvUrivZ
Qfc7DZ9c526s9tU693n178J6kNTSsZd0/pjYPtZ9GrtY+k2x95jx0l+UPjq2
z3uv9DMlKd9H5w7V9XpLj6VvKv1a6SN1/bsj+wwf6nlf0Pk3x77mXYXnzm6s
N74RPq76b1T7Bsk49T+Lf6L2dTwT8QIxiq5VU2OvYT6wNzJX+OY69oL0Pbi/
ZCvpi/B31B4quVXnPhN8reGS0dLrld7LLtaz3a32DTp/YmSf4yPmu469r2Mn
a/y1Gt9Ix7bW+P0k1+j6Ddkv1W4quVp6E43/KbHP01T3apDZnjWRXKX+naVv
ltjmXCm9vvRN8K0lV+T2Xw9R+1DJ77rfTpnjtV3x+VkPHMM/V3uBxu4gmSP9
SclWut+20p/Av9Z5d5X2n1sn9vHX4atKn514TC2NryP9XbXfkWzD+uT3qv2e
ZFvpm0ifmjgmKaRvX/peZ+OXlo7BsOc363meZS/K7KsPkdyjY3uWXvv4JHvp
/HaZfedrsMm8D/WvJPaR1FP/IZljuYGSCepvoP7P1P5UUp9YNXPsMFRyv/rH
Sd9N3+cIya/S9yq9V2Jzm2h8+8y+/HWSB9R/aOZYdTA+ifS9S3+rq6q9lhiS
+99CrIw9zuzLXy6ZqGNtM8cyV+FjSF9T+Zj1eQbdr03m2ONSfPjc8RDffh/J
l7r2LpnjheaSa4kXpe+YeA0Pkz5K13kgss++Qn03S39I7RslK6XfIv1htW+S
fCq9uc75UseuYM3o+jfo2Iap3zn+xk1qT40cI3yivlnEXzpWl/1G/bdK9s98
f+L3u1PvdY9KvtPxXZhzOtZF179a/U/jj6t9jeRm6V9V32BXjTlWfZNL24zR
On8f9d+bem98XPIDMWXqvXOW5HtsuvRJkWOSj6UfoOutTb1mb9P5u+O/J14T
16lvt8zznzk9PDdGQXw9Su1ndO9NJQ9K76lx4/AfJdOkPyTZQM+3Wek2Y0rs
qfRZas+UbEpsIv1xtR+TbB4cwxIP3pgbn1iV2+fenphC/Vvo2CPqf1iyofSt
pD+qdh+NGV8aUyH+HYHvh3+j4w0T2+zrdax26XtzzibBmA3x5Uj1Pa2+WpLp
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
4kbiR3xq6rmo/wALIydFfd//AYqJMWI=
         "]], Polygon3DBox[CompressedData["
1:eJwV1GtMV2UcwPEjKqLlhekcaSMxFZ3NuVx5KUSTiDIzBfHG1cTMvBCmhpdy
lWupKeAlKqut9aLbvIvgMnMrUeOihqO1RlmBl2T0gvkia/Z5Xjxjz4fv7zmH
//9wkhatmr0yJoqiAqu7VdIjihq7RdHqrlFUZD8kNopy2HE2h41mXdnyuCi6
YqCcJ/AUTaV1Fztgf0u3QLeAVWky2SjWhV1ieboYfqqLnuU6bwMbzZLcUDMr
ZlfZu2yE+enm5rBJ7Ib9m2bLdU+yNs1eVuMak9hebS/dftbJ5rGfWCHrrj1j
tootMXuGrWXNrpugabLyWVd2WndIl6fbyiaxdF0L26+7n9W6xljdOvacrpxN
1WXrOthT7Jp9pe4b95LKxrKLujW8STfOWc+wRNagm+q8Zbrp7LrmPfat2ans
MXaerWdrWX82j6Wa7WBlZj9kR5w5gp1n49mrLFv3KLvJ3mZ72Qj2A1sVPhf3
MtzcPqs3O6S77Rr54TnQvcJG6gbpLrAitpulsVx2i200e9m+1Oxqs2PYMl2L
bgeP5w9pllon7QvtJ+ridfm6bbpHeIbzrrAX2a9sJ+uvnWCuxVrM4li9v+Ok
bpqu3n6TZpPzBrO5LEXXzrbpKlkmG8+uho5tZY+zH82+ETqzo9jz7JyulLe4
lyGumcYu2G8Oz59uaHjGWYluKL9bd5p9qo1nx3TdXGMpS9f9rqlgB82OZYtY
mW4KzzLbzj4x248d1cWYXcLm66awv1kF+5h16jaxJLM9zf4Snmf2tX1++M5d
oy+bYfYm28dqWQZbp7vE1rLlLJllsSNsBhvK/nF2odkdfk7mM13jmu4J9of9
Lt1h3TjWix3UZfEtui7OKmDvsJRwJmsLzx8/Gs4yO8zsv+H+dWf9XB7eB7pE
zUK2hg0P3zk7Z7YfO8Lmsu0sTrfCqrMvdl6e8+7RrdT9qdvN7+NpmgzWar/H
/rhugm4AO6abz8ud11v3UvhfZZVspHYG+9wawr4L7zCffbHZ2bqHWRvbwN4K
nx+byK6z19lO1mA2J7xYnXeCfcE+Yn3YYd1/flXIBpmtZjnhPeFeBmh+thax
WHbWbLWugNXYzw/vHLNxrC58Xro7rFr3Gatgcewr1qHLZDNdI4ldZBm6Evab
roj1dGYjO8XKWA/2pa7d7KzwnLITmoXsQdaLdbD1ukQe454vsz6ucZhls60s
VvMCa2SvsZtsDFsVvg+2J7zvnZnOWq2XWQLrdC+1zlus28WmhWub7WT3shqW
y95nA80NZFVsQXguWV9WbY1i9c6f7LwtZmfpklkzy2abWRw7wDLD/7/ZO+xZ
Now16WbqStlo1sBKwjtH90B4h7E6tpG1smR2w1rHBrPbZhvMPq37y/4D533v
80tnK8L7QFcR3qc81dz/KzHsYg==
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k8s13Ecx/FP9EPIn1/+SxsdOBT9IopE/kRmVmay9mP1u5mtLnXgULfm
Wgdt+Rdy5cBBt9aVQw7czFWHHDi0NQeP3zo89ny9D7/9vn6+lYnXg68uhBCW
SCG5r/E3EkKLjlCQFsJb/UTMXtcdfjPgTvOh60zY7TrKtD2ln9lk1b2rx/y0
s3xZDYd2tyZ4z5l7Tr9Tmh7Cvp7SaOelhnCTWr5cDKFObzFrx/Q2c3a9NnCH
eXejNrFg39V7LNrN2sJ9vrpb9QFLdpu2s2w/1A46WXF3aTff7Efaw6rdq4+5
wVPPm6snnr3B3tMtiu1ZfcdL/vl7u7SaAztT//iNfti/dIMZVtyTGueD3aZV
jNsRPfK/2KbfvaYfqbPf6DOidrNWcJUXnq1cyxizS7WEuF2sRRTy3F2gV5Lv
gh3VfIbtPM0lhyH3Zc1m0M7STJ7YlzSD9OT74vYoIZJ8VtvPFiT0pf5//84B
jbk82w==
       "]]}, {
      Line3DBox[{1527, 1874, 1526, 1202, 1528, 1875, 1529, 2162, 1876, 1530, 
       1877, 1531, 2163, 1878, 1532, 1879, 1533, 1880, 1534, 1205, 1535, 1881,
        1536, 2164, 1882, 1537, 1883, 1538, 2165, 1884, 1539, 1885, 1540, 
       1886, 1541, 1208, 1542, 1887, 1543, 2166, 1888, 1544, 1889, 1545, 2167,
        1890, 1546, 1891, 1547, 1892, 1548, 1211, 1549, 1893, 1550, 2168, 
       1894, 1551, 1895, 1552, 2169, 1896, 1553, 1897, 1554}], 
      Line3DBox[{1556, 1898, 1555, 2114, 2210, 1557, 1899, 1558, 1227, 1559, 
       1900, 1560, 2170, 1901, 1561, 1902, 1562, 1903, 1563, 2115, 2211, 1564,
        1904, 1565, 1230, 1566, 1905, 1567, 2171, 1906, 1568, 1907, 1569, 
       1908, 1570, 2116, 2212, 1571, 1909, 1572, 1233, 1573, 1910, 1574, 2172,
        1911, 1575, 1912, 1576, 1913, 1577, 2117, 2213, 1578, 1914, 1579, 
       1236, 1580, 1915, 1581, 2173, 1916, 1582, 1917, 1583}], 
      Line3DBox[{1585, 1918, 1584, 2118, 2214, 1586, 1919, 1587, 2119, 2215, 
       1588, 1920, 1589, 1252, 1590, 1921, 1591, 1922, 1592, 2120, 2216, 1593,
        1923, 1594, 2121, 2217, 1595, 1924, 1596, 1255, 1597, 1925, 1598, 
       1926, 1599, 2122, 2218, 1600, 1927, 1601, 2123, 2219, 1602, 1928, 1603,
        1258, 1604, 1929, 1605, 1930, 1606, 2124, 2220, 1607, 1931, 1608, 
       2125, 2221, 1609, 1932, 1610, 1261, 1611, 1933, 1612}], 
      Line3DBox[{204, 205, 926, 206, 207, 927, 208, 209, 928, 210, 211, 212, 
       929, 213, 214, 930, 215, 216, 931, 217, 218, 219, 932, 220, 221, 933, 
       222, 223, 934, 224, 225, 226, 935, 227, 228, 936, 229, 230, 937, 231, 
       232}], Line3DBox[{1614, 1934, 1613, 1286, 1615, 1935, 1616, 2174, 1936,
        1617, 1937, 1618, 2175, 1938, 1619, 1939, 1620, 1940, 1621, 1289, 
       1622, 1941, 1623, 2176, 1942, 1624, 1943, 1625, 2177, 1944, 1626, 1945,
        1627, 1946, 1628, 1292, 1629, 1947, 1630, 2178, 1948, 1631, 1949, 
       1632, 2179, 1950, 1633, 1951, 1634, 1952, 1635, 1295, 1636, 1953, 1637,
        2180, 1954, 1638, 1955, 1639, 2181, 1956, 1640, 1957, 1641}], 
      Line3DBox[{1643, 1958, 1642, 2126, 2222, 1644, 1959, 1645, 1311, 1646, 
       1960, 1647, 2182, 1961, 1648, 1962, 1649, 1963, 1650, 2127, 2223, 1651,
        1964, 1652, 1314, 1653, 1965, 1654, 2183, 1966, 1655, 1967, 1656, 
       1968, 1657, 2128, 2224, 1658, 1969, 1659, 1317, 1660, 1970, 1661, 2184,
        1971, 1662, 1972, 1663, 1973, 1664, 2129, 2225, 1665, 1974, 1666, 
       1320, 1667, 1975, 1668, 2185, 1976, 1669, 1977, 1670}], 
      Line3DBox[{1672, 1978, 1671, 2130, 2226, 1673, 1979, 1674, 2131, 2227, 
       1675, 1980, 1676, 1336, 1677, 1981, 1678, 1982, 1679, 2132, 2228, 1680,
        1983, 1681, 2133, 2229, 1682, 1984, 1683, 1339, 1684, 1985, 1685, 
       1986, 1686, 2134, 2230, 1687, 1987, 1688, 2135, 2231, 1689, 1988, 1690,
        1342, 1691, 1989, 1692, 1990, 1693, 2136, 2232, 1694, 1991, 1695, 
       2137, 2233, 1696, 1992, 1697, 1345, 1698, 1993, 1699}], 
      Line3DBox[{407, 408, 1010, 409, 410, 1011, 411, 412, 1012, 413, 414, 
       415, 1013, 416, 417, 1014, 418, 419, 1015, 420, 421, 422, 1016, 423, 
       424, 1017, 425, 426, 1018, 427, 428, 429, 1019, 430, 431, 1020, 432, 
       433, 1021, 434, 435}], 
      Line3DBox[{1701, 1994, 1700, 1370, 1702, 1995, 1703, 2186, 1996, 1704, 
       1997, 1705, 2187, 1998, 1706, 1999, 1707, 2000, 1708, 1373, 1709, 2001,
        1710, 2188, 2002, 1711, 2003, 1712, 2189, 2004, 1713, 2005, 1714, 
       2006, 1715, 1376, 1716, 2007, 1717, 2190, 2008, 1718, 2009, 1719, 2191,
        2010, 1720, 2011, 1721, 2012, 1722, 1379, 1723, 2013, 1724, 2192, 
       2014, 1725, 2015, 1726, 2193, 2016, 1727, 2017, 1728}], 
      Line3DBox[{1730, 2018, 1729, 2138, 2234, 1731, 2019, 1732, 1395, 1733, 
       2020, 1734, 2194, 2021, 1735, 2022, 1736, 2023, 1737, 2139, 2235, 1738,
        2024, 1739, 1398, 1740, 2025, 1741, 2195, 2026, 1742, 2027, 1743, 
       2028, 1744, 2140, 2236, 1745, 2029, 1746, 1401, 1747, 2030, 1748, 2196,
        2031, 1749, 2032, 1750, 2033, 1751, 2141, 2237, 1752, 2034, 1753, 
       1404, 1754, 2035, 1755, 2197, 2036, 1756, 2037, 1757}], 
      Line3DBox[{1759, 2038, 1758, 2142, 2238, 1760, 2039, 1761, 2143, 2239, 
       1762, 2040, 1763, 1420, 1764, 2041, 1765, 2042, 1766, 2144, 2240, 1767,
        2043, 1768, 2145, 2241, 1769, 2044, 1770, 1423, 1771, 2045, 1772, 
       2046, 1773, 2146, 2242, 1774, 2047, 1775, 2147, 2243, 1776, 2048, 1777,
        1426, 1778, 2049, 1779, 2050, 1780, 2148, 2244, 1781, 2051, 1782, 
       2149, 2245, 1783, 2052, 1784, 1429, 1785, 2053, 1786}], 
      Line3DBox[{610, 611, 1094, 612, 613, 1095, 614, 615, 1096, 616, 617, 
       618, 1097, 619, 620, 1098, 621, 622, 1099, 623, 624, 625, 1100, 626, 
       627, 1101, 628, 629, 1102, 630, 631, 632, 1103, 633, 634, 1104, 635, 
       636, 1105, 637, 638}], 
      Line3DBox[{1788, 2054, 1787, 1454, 1789, 2055, 1790, 2198, 2056, 1791, 
       2057, 1792, 2199, 2058, 1793, 2059, 1794, 2060, 1795, 1457, 1796, 2061,
        1797, 2200, 2062, 1798, 2063, 1799, 2201, 2064, 1800, 2065, 1801, 
       2066, 1802, 1460, 1803, 2067, 1804, 2202, 2068, 1805, 2069, 1806, 2203,
        2070, 1807, 2071, 1808, 2072, 1809, 1463, 1810, 2073, 1811, 2204, 
       2074, 1812, 2075, 1813, 2205, 2076, 1814, 2077, 1815}], 
      Line3DBox[{1817, 2078, 1816, 2150, 2246, 1818, 2079, 1819, 1479, 1820, 
       2080, 1821, 2206, 2081, 1822, 2082, 1823, 2083, 1824, 2151, 2247, 1825,
        2084, 1826, 1482, 1827, 2085, 1828, 2207, 2086, 1829, 2087, 1830, 
       2088, 1831, 2152, 2248, 1832, 2089, 1833, 1485, 1834, 2090, 1835, 2208,
        2091, 1836, 2092, 1837, 2093, 1838, 2153, 2249, 1839, 2094, 1840, 
       1488, 1841, 2095, 1842, 2209, 2096, 1843, 2097, 1844}], 
      Line3DBox[{1846, 2098, 1845, 2154, 2250, 1847, 2099, 1848, 2155, 2251, 
       1849, 2100, 1850, 1504, 1851, 2101, 1852, 2102, 1853, 2156, 2252, 1854,
        2103, 1855, 2157, 2253, 1856, 2104, 1857, 1507, 1858, 2105, 1859, 
       2106, 1860, 2158, 2254, 1861, 2107, 1862, 2159, 2255, 1863, 2108, 1864,
        1510, 1865, 2109, 1866, 2110, 1867, 2160, 2256, 1868, 2111, 1869, 
       2161, 2257, 1870, 2112, 1871, 1513, 1872, 2113, 1873}]}, {
      Line3DBox[{842, 1190, 843, 1202, 866, 1214, 878, 2210, 1226, 890, 1238, 
       902, 2214, 1250, 914, 1262, 926, 1274, 938, 1286, 950, 1298, 962, 2222,
        1310, 974, 1322, 986, 2226, 1334, 998, 1346, 1010, 1358, 1022, 1370, 
       1034, 1382, 1046, 2234, 1394, 1058, 1406, 1070, 2238, 1418, 1082, 1430,
        1094, 1442, 1106, 1454, 1118, 1466, 1130, 2246, 1478, 1142, 1490, 
       1154, 2250, 1502, 1166, 1514, 1178}], 
      Line3DBox[{844, 1191, 845, 1203, 2162, 867, 1215, 879, 1227, 891, 1239, 
       903, 2215, 1251, 915, 1263, 927, 1275, 939, 1287, 2174, 951, 1299, 963,
        1311, 975, 1323, 987, 2227, 1335, 999, 1347, 1011, 1359, 1023, 1371, 
       2186, 1035, 1383, 1047, 1395, 1059, 1407, 1071, 2239, 1419, 1083, 1431,
        1095, 1443, 1107, 1455, 2198, 1119, 1467, 1131, 1479, 1143, 1491, 
       1155, 2251, 1503, 1167, 1515, 1179}], 
      Line3DBox[{846, 1192, 847, 1204, 2163, 868, 1216, 880, 1228, 2170, 892, 
       1240, 904, 1252, 916, 1264, 928, 1276, 940, 1288, 2175, 952, 1300, 964,
        1312, 2182, 976, 1324, 988, 1336, 1000, 1348, 1012, 1360, 1024, 1372, 
       2187, 1036, 1384, 1048, 1396, 2194, 1060, 1408, 1072, 1420, 1084, 1432,
        1096, 1444, 1108, 1456, 2199, 1120, 1468, 1132, 1480, 2206, 1144, 
       1492, 1156, 1504, 1168, 1516, 1180}], 
      Line3DBox[{8, 37, 1533, 66, 95, 1562, 124, 153, 1591, 182, 211, 240, 
       1620, 269, 298, 1649, 327, 356, 1678, 385, 414, 443, 1707, 472, 501, 
       1736, 530, 559, 1765, 588, 617, 646, 1794, 675, 704, 1823, 733, 762, 
       1852, 791, 820}], 
      Line3DBox[{848, 1193, 849, 1205, 869, 1217, 881, 2211, 1229, 893, 1241, 
       905, 2216, 1253, 917, 1265, 929, 1277, 941, 1289, 953, 1301, 965, 2223,
        1313, 977, 1325, 989, 2228, 1337, 1001, 1349, 1013, 1361, 1025, 1373, 
       1037, 1385, 1049, 2235, 1397, 1061, 1409, 1073, 2240, 1421, 1085, 1433,
        1097, 1445, 1109, 1457, 1121, 1469, 1133, 2247, 1481, 1145, 1493, 
       1157, 2252, 1505, 1169, 1517, 1181}], 
      Line3DBox[{850, 1194, 851, 1206, 2164, 870, 1218, 882, 1230, 894, 1242, 
       906, 2217, 1254, 918, 1266, 930, 1278, 942, 1290, 2176, 954, 1302, 966,
        1314, 978, 1326, 990, 2229, 1338, 1002, 1350, 1014, 1362, 1026, 1374, 
       2188, 1038, 1386, 1050, 1398, 1062, 1410, 1074, 2241, 1422, 1086, 1434,
        1098, 1446, 1110, 1458, 2200, 1122, 1470, 1134, 1482, 1146, 1494, 
       1158, 2253, 1506, 1170, 1518, 1182}], 
      Line3DBox[{852, 1195, 853, 1207, 2165, 871, 1219, 883, 1231, 2171, 895, 
       1243, 907, 1255, 919, 1267, 931, 1279, 943, 1291, 2177, 955, 1303, 967,
        1315, 2183, 979, 1327, 991, 1339, 1003, 1351, 1015, 1363, 1027, 1375, 
       2189, 1039, 1387, 1051, 1399, 2195, 1063, 1411, 1075, 1423, 1087, 1435,
        1099, 1447, 1111, 1459, 2201, 1123, 1471, 1135, 1483, 2207, 1147, 
       1495, 1159, 1507, 1171, 1519, 1183}], 
      Line3DBox[{15, 44, 1540, 73, 102, 1569, 131, 160, 1598, 189, 218, 247, 
       1627, 276, 305, 1656, 334, 363, 1685, 392, 421, 450, 1714, 479, 508, 
       1743, 537, 566, 1772, 595, 624, 653, 1801, 682, 711, 1830, 740, 769, 
       1859, 798, 827}], 
      Line3DBox[{854, 1196, 855, 1208, 872, 1220, 884, 2212, 1232, 896, 1244, 
       908, 2218, 1256, 920, 1268, 932, 1280, 944, 1292, 956, 1304, 968, 2224,
        1316, 980, 1328, 992, 2230, 1340, 1004, 1352, 1016, 1364, 1028, 1376, 
       1040, 1388, 1052, 2236, 1400, 1064, 1412, 1076, 2242, 1424, 1088, 1436,
        1100, 1448, 1112, 1460, 1124, 1472, 1136, 2248, 1484, 1148, 1496, 
       1160, 2254, 1508, 1172, 1520, 1184}], 
      Line3DBox[{856, 1197, 857, 1209, 2166, 873, 1221, 885, 1233, 897, 1245, 
       909, 2219, 1257, 921, 1269, 933, 1281, 945, 1293, 2178, 957, 1305, 969,
        1317, 981, 1329, 993, 2231, 1341, 1005, 1353, 1017, 1365, 1029, 1377, 
       2190, 1041, 1389, 1053, 1401, 1065, 1413, 1077, 2243, 1425, 1089, 1437,
        1101, 1449, 1113, 1461, 2202, 1125, 1473, 1137, 1485, 1149, 1497, 
       1161, 2255, 1509, 1173, 1521, 1185}], 
      Line3DBox[{858, 1198, 859, 1210, 2167, 874, 1222, 886, 1234, 2172, 898, 
       1246, 910, 1258, 922, 1270, 934, 1282, 946, 1294, 2179, 958, 1306, 970,
        1318, 2184, 982, 1330, 994, 1342, 1006, 1354, 1018, 1366, 1030, 1378, 
       2191, 1042, 1390, 1054, 1402, 2196, 1066, 1414, 1078, 1426, 1090, 1438,
        1102, 1450, 1114, 1462, 2203, 1126, 1474, 1138, 1486, 2208, 1150, 
       1498, 1162, 1510, 1174, 1522, 1186}], 
      Line3DBox[{22, 51, 1547, 80, 109, 1576, 138, 167, 1605, 196, 225, 254, 
       1634, 283, 312, 1663, 341, 370, 1692, 399, 428, 457, 1721, 486, 515, 
       1750, 544, 573, 1779, 602, 631, 660, 1808, 689, 718, 1837, 747, 776, 
       1866, 805, 834}], 
      Line3DBox[{860, 1199, 861, 1211, 875, 1223, 887, 2213, 1235, 899, 1247, 
       911, 2220, 1259, 923, 1271, 935, 1283, 947, 1295, 959, 1307, 971, 2225,
        1319, 983, 1331, 995, 2232, 1343, 1007, 1355, 1019, 1367, 1031, 1379, 
       1043, 1391, 1055, 2237, 1403, 1067, 1415, 1079, 2244, 1427, 1091, 1439,
        1103, 1451, 1115, 1463, 1127, 1475, 1139, 2249, 1487, 1151, 1499, 
       1163, 2256, 1511, 1175, 1523, 1187}], 
      Line3DBox[{862, 1200, 863, 1212, 2168, 876, 1224, 888, 1236, 900, 1248, 
       912, 2221, 1260, 924, 1272, 936, 1284, 948, 1296, 2180, 960, 1308, 972,
        1320, 984, 1332, 996, 2233, 1344, 1008, 1356, 1020, 1368, 1032, 1380, 
       2192, 1044, 1392, 1056, 1404, 1068, 1416, 1080, 2245, 1428, 1092, 1440,
        1104, 1452, 1116, 1464, 2204, 1128, 1476, 1140, 1488, 1152, 1500, 
       1164, 2257, 1512, 1176, 1524, 1188}], 
      Line3DBox[{864, 1201, 865, 1213, 2169, 877, 1225, 889, 1237, 2173, 901, 
       1249, 913, 1261, 925, 1273, 937, 1285, 949, 1297, 2181, 961, 1309, 973,
        1321, 2185, 985, 1333, 997, 1345, 1009, 1357, 1021, 1369, 1033, 1381, 
       2193, 1045, 1393, 1057, 1405, 2197, 1069, 1417, 1081, 1429, 1093, 1441,
        1105, 1453, 1117, 1465, 2205, 1129, 1477, 1141, 1489, 2209, 1153, 
       1501, 1165, 1513, 1177, 1525, 1189}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
DJDTbk8RxhFNcEl49Ba3v2oZ93lKTA+6Wa40M7DZIhH6aRY8zs4z2fr5K7Ro
oeXKmU+FimiDaeEN8V3dV6H3eq1R5HLG650tDlDI476M17c7XfW+5BdxKOJf
irxZYozUL9LswO2lBJ2Om2VpAEfZibL9BfboSlfPOJaziH9vZ/x9KaR40UdV
hUYKBduIvcLtj/zOZg7o/6uyP4GLpUXPGuVNClHjcR7p+fJ7kV0Ltm8X3l/6
HogeVycl4nUvEv998h+LNfJfK1aqiz6KHgib0eH2XJ18yeQFnFCanx6o1KoA
UybxxPi3XPPGhK3dUK/iAwozVk/gTNu5gePJJ2zq9zlcncEn1efj5U0LsPpY
P4TnFZNKfnkq0B1qFhlpXIpFUcK66x3MY7NWpf8+9kTnvRaq4tbNINvahALr
/6FbZbWVd2ygN7i9QrTHDApKwq7g+a7bPxl4PBWLDHYpudBuekKlSINSH/YL
NHW0rbVe0N0/GzknzY86lAcLcD+5T+bZ4+r3o5NDy26VdNFgtSPtEY6rH399
4zlxxhfIVzvanzpZo51Tu0rw+DeaJd/T+anBpZ7q8ckWDni0NFyN5yvO0zA7
QK4NbCu5fhQ2UpCS8ScQ80G560W5U87Iq/ZOaXa8NYzfizLE81oN+XpdMj4Y
yvP3tQRkaUKIw45DOG9ar/h0OONkGFq+9Nuz8LYX/HtEnYf9gl6ZyIdd/+zB
1Fqg7au3CZobuiOJ5/vr1iPu4w32SGydIkn+5UJb1+NrhF9WUv0tWhJiBRYc
jmu+mTwgkvxVmIgzLyVyv/d0QL32raGR5mLQ7vmTDLenWFlo7s5ygF8p7izM
FY6ojvW/QRxvHIx8Jf9dzxE1OPaNBO9wAMfYMAo8fnM7UbJr6XuhNtOAOd5M
CrHwXv+K57u27DNv9cUYOPMnPp+gdkbSn3vTsd2r0P4WxltriTyE/FO5X2pB
P1ofx9+9mrRrlnwXBXo82fCf5bWPKt9PnN7G/Ria3m64Yq6LFC2+HdCZ5gDn
1GIfzL+IbzS26Wsh5sUCSTRoBYM9vrW4n5bGsrASTQ80zGhB/vKBK+h4S41i
+/P8pD93tXcwuBlnUZg3eSHxeQqx7zie3O3sbV7piGIO5xqWVSig7XrPIizP
NwVaA2dDPOHBBan3kntD0bQwo99/JP6s/Lb8nZyXbb1FNoPTh2TQ6N4Ln/F4
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
T/z5YbVa9UFJkCHKyFLF98Jp990l7rHisLZlJ7BSpgaCth3YT9tbaG3nGyQN
YQkxK9Jz2sBbl4Hrrcz5PjmGsRJg9vWp01zetlyLzmH5X/G/XXbbWRCMVdmW
bc/ro6dWz3Bf3snD5iGP+7nA5j7Z7VfHjVDyJOA8RoNVsrneU3Zgn73yToBc
H/W68uF7xKnyobztPAucnDxRanlFG30vs35M0Kmv764YsGCEyZFBC7fd2uj2
VyVsl2SirVQyuPejn+c/Jd1PVkTMLsJjBF0/2O2oxbIdhFMVNf84t62fowL9
hNwE6igveIYowFzVc/WgcUl0kSIb273lJy/kp8YZEK/gqa7n+/nA8BMr9meW
bo99J98rgdbvm8dby8iCpfI6zps94g5mdbNxQnTS3f5HF/1A7QJdDJHnuT+u
05FLw4hWpLwXpM/JoMF/+7F85H/Jigvs1kFH+c83/OryB6/3Ja7E7/0nmHdo
tyrDieEo7RPSJkjh8gE8r+xGitZKjqYcbL48n8ax0wEZkynhOvL1xZWUV4Um
yODmp8DUCEfYIku6guub9/6ZBM3pIRc3coap5Aig3uSuJvDV4b8oBf6x2oCj
zPV3TxXt0d2uA6eI3/fdTw+9L79I4tm1FOZDwwsNu0IxTuPnYEf+3g+SsHlZ
dOfmIymQY7iL751uy+qd9IYSwO5Iw9dyIxYOn3gzNbFNZ7Cv8jWp0oDVLOYA
Omd3oKEW/Ezom8XJC9TtDjooqq10RefdESSTpZVB4KttshZyvMS8Ub1EwZcf
Zx2ANbEmj6gDvqyRGXbXkQXV2OaVy0/sIJNjshD3QV/bZf86xQq0dl/qMlDW
BGsL7XmC3uy9f+F1kS0isVzi2Sl2EBVkDh8h5KnmonDDj0wHwS7qhXFfR9Ck
6FwjvlfKnU7mSKc3cPH8MJ5MTgN14/SL9cT9shn+/FCxL5CUo0bFppxgNmeK
n8grCrxe433sao+o507QTlsZgNVWJMbhXHO5Lkh1SwDCX48LBRiqoNZeXmxP
LmswpJvs0YECXqPsSxwK6MKiO8Yh7BmPcrAIMkLll84qT6tqwd62+3h/r242
5PHl6kC2/MfBy/2uKEulV4Dgk62qaN/PbBuk6ifAazfGBQ1nGnBempFqb2zQ
Vw2Q8fhY4FqpAjsrKnB/2Xfb1w+9OAzR7Be/XPecYJRdEuFN5Mn7q9xyVbsV
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
j3qj+O45A+LcmZumn5aR2fa3XoTzXS4VQ1S3uWyJPqNrgQytny194d33e+ln
z1qDRumoC7FfQyceJAZ/VAN09a0HY5sP6tFnxPORWEq86C+91kbDChS8B+zU
EFuzP/bPSXOklODrQsh4Oa6KvJ8f7ZsqxPmTn+0aY7/YNVB3+1fOmnxD5DSs
40vQDzy7KhWaY4/OjgcofOaxgQ+JQbgP4ii7dFDwFRW4wBJfOaYUi+rIfu4l
8AOkWNOZd9TRSIHvP64QKiv4uVdzF4EndNCyyhpN8AVh56L+d3T2KPaz6ACx
77+sphkSuSJg52f5+3Ojh5CT31IN0We6j/FqIZgEocDo1F93lw1gTOWzO6E/
UmtMCgn/9JHE1erKKd5oJKdeZkWs73ehJZ5ezw1a2zsKKCJ8YFKmlYVYP8zP
W7qrVR2F8C5t9H1zQX+bfIMI/t+XU9P9VrNB5T9dz6cuKkKww85JQh/CVK7e
+jgmhUycynr3RBii6M6NVEIOczwxgdwNU6QIIYv4/Gua6FGSPo6zbt3cMzHh
YYKqlYZ1erQPo3SKWAECX51CvbrbRzMKfb0ReZdvxRI+Z+zeSeDMh4od3m6x
G8BUB9PfJ9HZaIjt+F6iP3fn5p5StphDMCTpVtFFk4KsLq8+J+bN1uoc/Wuj
bQQePyJMzGqd0YHHfBgvXXk7aUeCp8v2eV+N7bkfjk6dVP1F6OE42S4e0d8R
sPxbkES35IMkz1Bgv53nUAE5h54OBOkw8Rxl0IIPUg2nCP6PXL+u7vzSFylG
eX+o4vCEY19aWgi7fYuHS275rybExPuN/PxljmibI2jwPf7xeUodmQHqMX6D
Ep+LoegAVuyPAecKr+YXKxTV8eNd53Er1HDeWBzn/eJ8X00khKFc1pK+r3Vi
aOjshwOEPZzv4xmounAAqUo/b3RzSEbaZ8VHCLxrh4n2Z1LqccSgxUBpsJSG
Yh+Q5xJ9VUOcn+09UmMgbwej1IeBbBRQVuxCzCG5Ot8ge686EYJsRgLLNiLR
J9anLmibPlLiPXvwqzsIXaFrvKlMQvZOpFbCjiXIjXk8i1KFHX2mZ0e3HGBF
u0qY4PPm4yZj1bFd8H5hMN/ruy0KLDzwiKBPckgL9tQchJ2xh404Io1h8jXX
M8I+SF1KKWs6ZYA0a14F3rmjiHQ0FHBc/Pm/M5d+BGuhLc93LsbDRuiNI+A5
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
vvvr3fs2QLsvi23puRd69kUc19kVUO3ZP5mri96s/PvPhYkSXf3NgvWjGp3k
OdZGK8TG0cA6pGQAbucvheP8NJ/CoL5Olh35XRjpnOKIxA/3juM5FyaVz0py
nUCa9ee7LjNPxGKp8YKwJ6WmhUQuZZgiPqfPt/bL8aOii5tY3iqbiJnJXHFA
4hrPqVqY9VAH473zxHOyck/MDOZbw9rcf4/HvCPR2cOtuwg8yiC9+Xhahxya
5RiYd6vSRCQZHJhPZi6UfmtwlYW1ENXmPnFdABraAnwu69LuYzdlgZ1TI3WP
WCiIuhhmEXkIFTWnFhJ3O6B9v0/VLLeEAI2u4i8C181pX9F6arOpuTsvreUW
tyUK2ejD/bv+kYR+Pr+tA5lpJQY/+MiRq2wQvu+P3s8M8IrwIarKZ1tGUkZQ
eOcirpuuu7z2/vekNjLjsCgeveaCxl+ILBHn+37yEEsb9zG0FvHp6+1tH9S+
5dhI1C84512+h2KN4M4pc4GBIF1QqDTF9U1mYQ+fwaQN/MfSZsg0bY+cDQHn
ydOt5/YFHFUAa7b5M//4lVHijdv4vou2Lf6Ny/2mSRV8enbMxAQtR+7H82uq
A6ozZrMZ0L4jfW3vPnNA/REJzP/W/YebateskKvtDSM2b2sQJi1vJfafbjpA
UQxJQ9Z26b5iXVNkSXkVz/W+dJ7tzOfPgiDn+fwa2QUTRPksC99ryT0saq0W
WmBTMPb9trAHOsctJU1854XSkwOXBw1QEambAFmXFTTts8L5FQdfC4vz6Omi
5bCiv4Hy+sBuPYjzMTa+v1+n5TCENQGrbJ8/hkj49NwSsX47r7HSYNAGfSg0
FXsx7wWPCg+IEHyrvHqaanJBCWZTG5zd3Sxh1jgI63cP2YpOAU8n1F3/tbh1
ghUNz202EP91mSLe7UmwGVBH+lfciPRAF9UKy4j7WCotosPp5gp//zslxePt
g37mqz7DfeCny+v2+RhAjVfHupEVLSD7t7gv1lLXvtK3AoboOVOeutbEATje
4hmP7T1ma/vcu85QWldb9uS9EtrNLGdAvPe2qFHAO8lwdDFY/FhanTdUqHF+
JHCGuJfxxWdnXFDpBpPQb4af3VnrzYeI9duteSEaMq7owO8/LY9zdKCOpXWA
2M+VY6QK5oyOqHhP0QbLgi009ZR6EnSWq0yVZpQSKLBsOeiHIxO6YamH7cxj
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
07n8MlQMrNmAJ8lHxf38fjhTzIXlz/8BNcjNBg==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{351.5793221243793, 272.99311700185876`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.34059451644889727`, -2.9101671688125257`, 1.692608172298218},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.4834098818744683`*^9, 3.4834119146791887`*^9, 
  3.4834122698175406`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Date, Time, and CPU TimeUsed of Run", "Section",
 CellChangeTimes->{{3.48329172736705*^9, 3.483291751351635*^9}, 
   3.483294199255597*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Date", " ", "and", " ", "Time", " ", "of", " ", "Run"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DateString", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CPU", " ", "time", " ", "of", " ", "Run"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"RunCPUTime", " ", "=", " ", 
    RowBox[{
     RowBox[{"TimeUsed", "[", "]"}], " ", "-", " ", "SessionCPUTime"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"RunRealTime", " ", "=", " ", 
    RowBox[{
     RowBox[{"SessionTime", "[", "]"}], " ", "-", " ", 
     "SessionRealTime"}]}]}]}]], "Input",
 CellChangeTimes->{{3.483291764257637*^9, 3.483291795507037*^9}, {
  3.483291840365551*^9, 3.4832918410999117`*^9}, {3.483292824399299*^9, 
  3.483292824633662*^9}, {3.483292960501705*^9, 3.4832930064524775`*^9}, {
  3.483293043919309*^9, 3.483293096182534*^9}, {3.4832945360662127`*^9, 
  3.483294636339538*^9}, {3.483294706751195*^9, 3.4832947090794992`*^9}, {
  3.4832975930620337`*^9, 3.4832976007028055`*^9}, {3.4832977810187674`*^9, 
  3.483297796237809*^9}, {3.483297999552088*^9, 3.483298000036463*^9}, {
  3.483298058927088*^9, 3.483298059598963*^9}}],

Cell[BoxData["\<\"Fri 21 May 2010 01:25:14\"\>"], "Output",
 CellChangeTimes->{3.483409881890093*^9, 3.483411914741688*^9}],

Cell[BoxData["7.046000000000028`"], "Output",
 CellChangeTimes->{3.483409881890093*^9, 3.483411914757313*^9}],

Cell[BoxData["1649.1509256`10.367775400690501"], "Output",
 CellChangeTimes->{3.483409881890093*^9, 3.483411914772938*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.4833797812963142`*^9, 3.483379783140041*^9}}]
}, Open  ]]
},
Evaluator->"Server",
WindowSize->{644, 908},
WindowMargins->{{-5, Automatic}, {Automatic, 0}},
Magnification->1.100000023841858,
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 111, 1, 77, "Section"],
Cell[681, 25, 10385, 265, 1233, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11103, 295, 41, 3, 106, "Section"],
Cell[11147, 300, 3538, 65, 169, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14722, 370, 36, 0, 77, "Section"],
Cell[14761, 372, 139, 4, 32, "Input"],
Cell[14903, 378, 7526, 203, 713, "Input"],
Cell[22432, 583, 599, 17, 83, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23068, 605, 54, 0, 77, "Section"],
Cell[23125, 607, 1175, 34, 129, "Input"],
Cell[24303, 643, 243, 7, 32, "Input"],
Cell[24549, 652, 1062, 31, 129, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25648, 688, 108, 1, 77, "Section"],
Cell[25759, 691, 4609, 124, 573, "Input"],
Cell[30371, 817, 1280, 34, 133, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31688, 856, 167, 2, 77, "Section"],
Cell[31858, 860, 28042, 583, 2709, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59937, 1448, 147, 1, 77, "Section"],
Cell[60087, 1451, 201, 5, 32, "Input"],
Cell[60291, 1458, 1434, 32, 137, "Input"],
Cell[61728, 1492, 3437, 90, 365, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65202, 1587, 110, 1, 77, "Section"],
Cell[65315, 1590, 4509, 125, 582, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69861, 1720, 51, 0, 77, "Section"],
Cell[69915, 1722, 201, 5, 32, "Input"],
Cell[70119, 1729, 1113, 26, 115, "Input"],
Cell[71235, 1757, 2724, 64, 289, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73996, 1826, 27, 0, 77, "Section"],
Cell[74026, 1828, 468, 9, 53, "Input"],
Cell[74497, 1839, 1187, 33, 155, "Input"],
Cell[CellGroupData[{
Cell[75709, 1876, 335, 7, 32, "Input"],
Cell[76047, 1885, 142162, 2308, 316, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218258, 4199, 145, 2, 77, "Section"],
Cell[CellGroupData[{
Cell[218428, 4205, 1224, 26, 133, "Input"],
Cell[219655, 4233, 123, 1, 32, "Output"],
Cell[219781, 4236, 109, 1, 32, "Output"],
Cell[219893, 4239, 122, 1, 32, "Output"]
}, Open  ]],
Cell[220030, 4243, 94, 1, 32, "Input"]
}, Open  ]]
}
]
*)
, "y"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"constant", " ", "=", " ", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831278343069334`*^9, 3.483127834713189*^9}, {
   3.48312791666649*^9, 3.4831279232758646`*^9}, {3.4831279533071146`*^9, 
   3.4831280048696146`*^9}, {3.48312804316649*^9, 3.48312804985399*^9}, {
   3.483130001416558*^9, 3.483130002791558*^9}, 3.483130198010298*^9, {
   3.4831309174099994`*^9, 3.483131041245031*^9}, {3.4831316122192545`*^9, 
   3.483131612516122*^9}, 3.4831321970027757`*^9, {3.483133996561973*^9, 
   3.483134005264931*^9}, {3.483134190120757*^9, 3.483134193964433*^9}, {
   3.4831350888585253`*^9, 3.4831351151375895`*^9}, {3.483135419881668*^9, 
   3.483135422647152*^9}, {3.483135460879569*^9, 3.4831354610514355`*^9}, {
   3.4831391241778593`*^9, 3.4831391254904013`*^9}, {3.4831643223600006`*^9, 
   3.483164323359988*^9}, {3.4831676092085533`*^9, 3.483167631989512*^9}, {
   3.4831677506442432`*^9, 3.483167753222335*^9}, {3.483170320470724*^9, 
   3.4831703323611965`*^9}, {3.483170804542653*^9, 3.4831708047145257`*^9}, {
   3.4832167051932306`*^9, 3.48321670569324*^9}, {3.483216763678728*^9, 
   3.483216764491244*^9}, 3.483217073247172*^9, {3.483219436463561*^9, 
   3.4832194469168863`*^9}, {3.483220945258154*^9, 3.483220953070804*^9}, {
   3.4832215545979786`*^9, 3.4832215596137*^9}, {3.4832918858021784`*^9, 
   3.4832918869896555`*^9}, {3.483292419505407*^9, 3.483292425958284*^9}, {
   3.483292547840588*^9, 3.483292549668573*^9}, 3.4832926922826195`*^9, {
   3.4832938974419575`*^9, 3.4832939040201664`*^9}, {3.48329408086618*^9, 
   3.483294082975582*^9}, {3.483294647418514*^9, 3.4832946500593414`*^9}, {
   3.4832948769781723`*^9, 3.483294893369007*^9}, {3.483296600700218*^9, 
   3.4832966051848803`*^9}, {3.483297608718584*^9, 3.483297609734228*^9}, {
   3.483297657000761*^9, 3.4832976599226923`*^9}, {3.4833019635360384`*^9, 
   3.4833019678328857`*^9}, {3.483302017035696*^9, 3.4833020180513144`*^9}, {
   3.4833135401102533`*^9, 3.4833135852349644`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["FOMesh Generation", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenNodeX", "[", "i_", "]"}], " ", ":=", " ", 
   RowBox[{"h", "*", "i"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GeneratePlateFunctions", "[", 
    RowBox[{"x0_", ",", " ", "y0_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"a", "*", "x"}], " ", "+", " ", 
       RowBox[{"b", "*", "y"}], " ", "+", " ", "c"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"PlateT1Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "-", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "-", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT2Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "-", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "+", "h"}], ",", 
           RowBox[{"y0", " ", "-", " ", "h"}]}], "]"}], " ", "\[Equal]", " ", 
         "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT3Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", " ", "+", " ", "h"}], ",", 
           RowBox[{"y0", "-", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "+", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT4Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "+", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT5Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", " ", "-", " ", "h"}], ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT6Eqns", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "-", "h"}], ",", "y0"}], "]"}], " ", "\[Equal]", " ",
          "0"}], ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{
           RowBox[{"x0", "-", "h"}], ",", 
           RowBox[{"y0", "+", "h"}]}], "]"}], " ", "\[Equal]", " ", "0"}], 
        ",", " ", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x0", ",", "y0"}], "]"}], " ", "\[Equal]", " ", "1"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Plate1Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT1Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", "1"}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate2Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT2Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate3Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT3Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate4Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT4Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate5Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT5Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\n", "\t", 
     RowBox[{"Plate6Solns", " ", "=", " ", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT6Eqns", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}], ",", " ", "1"}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ReturnSet", " ", "=", " ", 
      RowBox[{"{", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate1Solns"}], 
        ",", " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate2Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate3Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate4Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate5Solns"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Phi]", "[", 
          RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "Plate6Solns"}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ReturnSet", "]"}], ";"}], "\[IndentingNewLine]", 
    ")"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FOMesh", " ", "=", " ", 
   RowBox[{"Outer", "[", 
    RowBox[{"f", ",", 
     RowBox[{"Map", "[", 
      RowBox[{"GenNodeX", ",", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         FractionBox["length", "h"], " ", "-", " ", "1"}], "]"}]}], "]"}], 
     ",", " ", 
     RowBox[{"Map", "[", 
      RowBox[{"GenNodeX", ",", " ", 
       RowBox[{"Range", "[", 
        RowBox[{
         FractionBox["length", "h"], " ", "-", " ", "1"}], "]"}]}], "]"}]}], 
    "]"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.483131444458694*^9, 3.483131444880553*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlateFunction & Gradient Generation", "Section"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PlateFunctions", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", 
    RowBox[{
     FractionBox["length", "h"], "-", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{
     RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{
       RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PlateFunctions", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
      RowBox[{"GeneratePlateFunctions", "[", 
       RowBox[{
        RowBox[{"FOMesh", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"FOMesh", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], 
    "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4831314287405477`*^9, 3.483131429724885*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Robertisanass", "[", "p_", "]"}], ":=", 
   RowBox[{"Grad", "[", 
    RowBox[{"p", ",", 
     RowBox[{"Cartesian", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GradientFunctions", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", 
    RowBox[{
     FractionBox["length", "h"], "-", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{
     RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{
       RowBox[{"length", "/", "h"}], "-", "1"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"GradientFunctions", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
      RowBox[{"Map", "[", 
       RowBox[{"Robertisanass", ",", 
        RowBox[{"PlateFunctions", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4831314350215564`*^9, 3.4831314354902887`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["LoadVector Generation", "Section",
 CellChangeTimes->{{3.4833020344574594`*^9, 3.483302035582452*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GenerateBounds", "[", 
    RowBox[{"x0_", ",", "y0_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{"a", "*", "x"}], "+", "b"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"PlateT1Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", 
         RowBox[{"y0", "-", "h"}]}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "-", "h"}], "]"}], "\[Equal]", "y0"}]}], "}"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"PlateT2Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "+", "h"}], "]"}], "\[Equal]", 
         RowBox[{"y0", "-", "h"}]}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", "y0"}]}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT3Line", "=", "PlateT2Line"}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT4Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "+", "h"}], "]"}], "\[Equal]", "y0"}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", 
         RowBox[{"y0", "+", "h"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT5Line", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", "x0", "]"}], "\[Equal]", "y0"}], ",", 
        RowBox[{
         RowBox[{"\[Mu]", "[", 
          RowBox[{"x0", "-", "h"}], "]"}], "\[Equal]", 
         RowBox[{"y0", "+", "h"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"PlateT6Line", "=", "PlateT5Line"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate1Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT1Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate2Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT2Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate3Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT3Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate4Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT4Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate5Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT5Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Plate6Bound", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{"PlateT6Line", ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ReturnSet1", "=", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate1Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate2Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate3Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate4Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate5Bound"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Mu]", "[", "x", "]"}], "/.", "Plate6Bound"}]}], 
       "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ReturnSet1", "]"}], ";"}], "\[IndentingNewLine]",
     ")"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Solved", " ", "via", " ", "call", " ", "to", " ", "generatebounds"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BoundFunctions", "=", 
     RowBox[{"IdentityMatrix", "[", "meshconstant", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", " ", "\[LessEqual]", " ", "meshconstant"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", " ", "meshconstant"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"BoundFunctions", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
        RowBox[{"GenerateBounds", "[", 
         RowBox[{
          RowBox[{"FOMesh", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"FOMesh", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}]}], "]"}]}]}], 
      "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4831314741138053`*^9, 3.483131474645035*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stiffness Integral Definitions", "Section",
 CellChangeTimes->{{3.4832986751138105`*^9, 3.483298681817322*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Zeros", "[", "x_", "]"}], " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StiffIntegral1", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"Zeros", ",", "6"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.483298688911481*^9, 3.4832986983026466`*^9}, {
  3.4832987323046045`*^9, 3.4832988051681767`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stiffness Matrix Generation", "Section",
 CellChangeTimes->{{3.4833161244126186`*^9, 3.4833161293969936`*^9}, {
  3.483317319686699*^9, 3.4833173377490835`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MeshCoordinates", "[", "Node_", "]"}], " ", ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"i", " ", "=", " ", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"Node", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], 
        "]"}], " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"j", " ", "=", "  ", 
      RowBox[{
       RowBox[{"Quotient", "[", 
        RowBox[{
         RowBox[{"Node", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], 
        "]"}], " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "j"}], "}"}]}], "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NodeNumber", "[", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}], "]"}], " ", ":=", "  ", 
   RowBox[{"i", "+", 
    RowBox[{"meshconstant", "*", 
     RowBox[{"(", 
      RowBox[{"j", "-", "1"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InnerProduct", "[", 
    RowBox[{"Node1_", ",", "Node2_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i1", ",", " ", "j1"}], "}"}], " ", "=", " ", 
      RowBox[{"MeshCoordinates", "[", "Node1", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i2", ",", " ", "j2"}], "}"}], " ", "=", " ", 
      RowBox[{"MeshCoordinates", "[", "Node2", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Location", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i1", ",", " ", "j1"}], "}"}], " ", "-", " ", 
       RowBox[{"{", 
        RowBox[{"i2", ",", " ", "j2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "If", " ", "that", " ", "shit", " ", "is", " ", "to", " ", "the", " ", 
       "right"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Location", " ", "\[Equal]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "h"}], ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PlateA", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"4", ",", "6"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"PlateB", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "If", " ", "that", " ", "shit", " ", "is", " ", "to", " ", "the", " ", 
       "down", " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Location", " ", "\[Equal]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "h"}], ",", 
          RowBox[{"-", "h"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PlateA", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "5"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"PlateB", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "If", " ", "that", " ", "shit", " ", "is", " ", "to", " ", "the", " ", 
       "down"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Location", " ", "\[Equal]", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "h"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PlateA", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"PlateB", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"FirstBullShit", " ", "=", " ", 
      RowBox[{"\[Epsilon]", "*", "0.5", "*", 
       RowBox[{"h", "^", "2"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"DotProduct", "[", 
          RowBox[{
           RowBox[{"GradientFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"i1", ",", "j1", ",", 
              RowBox[{"PlateA", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", 
           RowBox[{"GradientFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"i2", ",", "j2", ",", 
              RowBox[{"PlateA", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], "+", 
         RowBox[{"DotProduct", "[", 
          RowBox[{
           RowBox[{"GradientFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"i1", ",", "j1", ",", 
              RowBox[{"PlateB", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", 
           RowBox[{"GradientFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"i2", ",", "j2", ",", 
              RowBox[{"PlateB", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}]}], "]"}]}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"SecondBullShit", " ", "=", " ", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "1"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"BoundFunctions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"PlateB", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "1"], 
         RowBox[{
          RowBox[{"DotProduct", "[", 
           RowBox[{"\[Beta]", ",", 
            RowBox[{"GradientFunctions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j", ",", 
               RowBox[{"PlateB", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], "*", 
          RowBox[{"PlateFunctions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"PlateB", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "+", " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "1"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", 
          RowBox[{"BoundFunctions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"PlateA", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]], 
         RowBox[{
          RowBox[{"DotProduct", "[", 
           RowBox[{"\[Beta]", ",", 
            RowBox[{"GradientFunctions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j", ",", 
               RowBox[{"PlateA", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], "*", 
          RowBox[{"PlateFunctions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"PlateA", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ThirdBullShit", " ", "=", " ", 
      RowBox[{
       RowBox[{"constant", "*", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "1"], 
         RowBox[{
          SubsuperscriptBox["\[Integral]", 
           RowBox[{"BoundFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", 
              RowBox[{"PlateB", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "1"], 
          RowBox[{
           RowBox[{"PlateFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", 
              RowBox[{"PlateB", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "*", 
           RowBox[{"PlateFunctions", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j", ",", 
              RowBox[{"PlateB", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
           RowBox[{"\[DifferentialD]", "y"}], 
           RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "+", " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "1"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", 
          RowBox[{"BoundFunctions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"PlateA", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]], 
         RowBox[{
          RowBox[{"PlateFunctions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"PlateA", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "*", 
          RowBox[{"PlateFunctions", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j", ",", 
             RowBox[{"PlateA", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4833161389126186`*^9, 3.4833162567403765`*^9}, 
   3.4833162868026843`*^9, {3.483316318943104*^9, 3.4833164903951316`*^9}, {
   3.48331657030087*^9, 3.4833166680658693`*^9}, {3.4833167330498285`*^9, 
   3.483316758455916*^9}, {3.483316796377548*^9, 3.4833169672514544`*^9}, {
   3.4833170150480237`*^9, 3.483317168406417*^9}, {3.483317268577651*^9, 
   3.4833173016711893`*^9}, {3.4833174314828587`*^9, 3.48331743438909*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Laplacian Operator, Stiffness Matrix Evaluation (Parallel)", "Section",
 CellChangeTimes->{{3.4833070959868712`*^9, 3.4833071116433215`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SendAck", "[", "client_", "]"}], " ", ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{"client", ",", " ", "\"\<Ack\>\""}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FullMessageList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SendMessage", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{
     RowBox[{"ClientPool", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Inner Product Stiffness\>\"", ",", 
       RowBox[{"FullMessageList", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StiffnessMatrix", " ", "=", " ", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", "meshconstant", ")"}], "2"], "]"}], " ", "-", " ", 
    RowBox[{"IdentityMatrix", "[", 
     SuperscriptBox[
      RowBox[{"(", "meshconstant", ")"}], "2"], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831291766479883`*^9, 3.4831291901323633`*^9}, {
  3.4831293118823633`*^9, 3.4831293125229883`*^9}, {3.4831370954543457`*^9, 
  3.48313709682939*^9}, {3.483137289273048*^9, 3.483137385853594*^9}, {
  3.483139030482668*^9, 3.48313903065456*^9}, {3.4831672271509438`*^9, 
  3.483167238853919*^9}, {3.4831672715097513`*^9, 3.4831672739940944`*^9}, {
  3.483168733912907*^9, 3.4831687404596987`*^9}, {3.4833076025843945`*^9, 
  3.4833076143343945`*^9}, {3.4833080367403502`*^9, 3.4833080383965893`*^9}, {
  3.4833101844453545`*^9, 3.4833101964921527`*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"n", "=", "1"}], ",", 
   RowBox[{"n", "\[LessEqual]", " ", "NumOperators"}], ",", 
   RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullMessageList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"k", "\[LessEqual]", "NumClients"}], ",", 
      RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"k", "\[Equal]", "NumClients"}], ",", 
         RowBox[{"UpperBound", " ", "=", " ", 
          SuperscriptBox["meshconstant", "2"]}], ",", 
         RowBox[{"UpperBound", " ", "=", " ", 
          RowBox[{"k", "*", 
           RowBox[{"Quotient", "[", 
            RowBox[{
             SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
            "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"LowerBound", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "*", 
          RowBox[{"Quotient", "[", 
           RowBox[{
            SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
           "]"}]}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"FullMessage", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "GradientFunctions", ",", "PlateFunctions", ",", "BoundFunctions", 
          ",", "MeshCoordinates", ",", "NodeNumber", ",", "InnerProduct", ",",
           "LowerBound", ",", " ", "UpperBound", ",", " ", "meshconstant"}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"FullMessageList", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"FullMessageList", ",", " ", "FullMessage"}], "]"}]}]}]}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"SendMessage", ",", " ", 
      RowBox[{"Range", "[", "NumClients", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"StiffnessMatrix", " ", "=", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"LinkRead", ",", "ClientPool"}], "]"}], "]"}], "+", 
      "StiffnessMatrix"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.483307198472558*^9, 3.4833072695203424`*^9}, {
  3.4833078910843945`*^9, 3.4833078962562695`*^9}, {3.483308609455435*^9, 
  3.483308632205289*^9}, {3.483308667720687*^9, 3.483308693658021*^9}, {
  3.4833087862511787`*^9, 3.483308790110529*^9}, {3.4833092458732367`*^9, 
  3.4833092480138483`*^9}, {3.4833093943722863`*^9, 3.483309410747182*^9}, {
  3.483310307913315*^9, 3.483310310022676*^9}, {3.483312078150916*^9, 
  3.483312128869285*^9}, {3.4833151796517696`*^9, 3.4833151836053247`*^9}, {
  3.4833174567951965`*^9, 3.483317500029295*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load Integral Definition", "Section",
 CellChangeTimes->{{3.4832986204231606`*^9, 3.48329862553283*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LoadIntegral", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"Zeros", ",", "6"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], "1"], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "1"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "2", "]"}], "]"}], " ", "=", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}]], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "2"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", " ", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], "1"], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "3"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "4"}], "]"}], "]"}]], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "4"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "5", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "5"}], "]"}], "]"}], "1"], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "5"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LoadIntegral", "[", 
    RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", 
   RowBox[{"HoldForm", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       RowBox[{"BoundFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "6"}], "]"}], "]"}]], 
      RowBox[{"lf", "*", 
       RowBox[{"PlateFunctions", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j", ",", "6"}], "]"}], "]"}], 
       RowBox[{"\[DifferentialD]", "y"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831359659080124`*^9, 3.4831361049669523`*^9}, {
  3.483136158231214*^9, 3.483136220651491*^9}, {3.4831390088867064`*^9, 
  3.4831390243414135`*^9}, {3.483298706709381*^9, 3.4832987076781864`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["LoadVector Evaluation (Parallel)", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SendAck", "[", "client_", "]"}], " ", ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{"client", ",", " ", "\"\<Ack\>\""}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FullMessageList", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SendMessage", "[", "n_", "]"}], ":=", " ", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{
     RowBox[{"ClientPool", "[", 
      RowBox[{"[", "n", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Inner Product\>\"", ",", 
       RowBox[{"FullMessageList", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadvector", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"Zeros", ",", 
     SuperscriptBox["meshconstant", "2"]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831291766479883`*^9, 3.4831291901323633`*^9}, {
  3.4831293118823633`*^9, 3.4831293125229883`*^9}, {3.4831370954543457`*^9, 
  3.48313709682939*^9}, {3.483137289273048*^9, 3.483137385853594*^9}, {
  3.483139030482668*^9, 3.48313903065456*^9}, {3.4831672271509438`*^9, 
  3.483167238853919*^9}, {3.4831672715097513`*^9, 3.4831672739940944`*^9}, {
  3.483168733912907*^9, 3.4831687404596987`*^9}}],

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"n", "=", "1"}], ",", 
   RowBox[{"n", "\[LessEqual]", " ", "6"}], ",", 
   RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullMessageList", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"k", "=", "1"}], ",", 
      RowBox[{"k", "\[LessEqual]", "NumClients"}], ",", 
      RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"k", "\[Equal]", "NumClients"}], ",", 
         RowBox[{"UpperBound", " ", "=", " ", 
          SuperscriptBox["meshconstant", "2"]}], ",", 
         RowBox[{"UpperBound", " ", "=", " ", 
          RowBox[{"k", "*", 
           RowBox[{"Quotient", "[", 
            RowBox[{
             SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
            "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"LowerBound", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "*", 
          RowBox[{"Quotient", "[", 
           RowBox[{
            SuperscriptBox["meshconstant", "2"], ",", " ", "NumClients"}], 
           "]"}]}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"FullMessage", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LoadIntegral", "[", 
           RowBox[{"[", "n", "]"}], "]"}], ",", "loadfunction", ",", " ", 
          "BoundFunctions", ",", "PlateFunctions", ",", "LowerBound", ",", 
          " ", "UpperBound", ",", " ", "meshconstant"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"FullMessageList", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{"FullMessageList", ",", " ", "FullMessage"}], "]"}]}]}]}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"SendMessage", ",", " ", 
      RowBox[{"Range", "[", "NumClients", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"loadvector", " ", "=", " ", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"LinkRead", ",", "ClientPool"}], "]"}], "]"}], " ", "+", " ", 
      "loadvector"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Pause", "[", "3", "]"}], ";"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQHWRzYH3X55eOQXsWbgTTNqv2QmjzfSCa45yCUh+Q
3ne6VhlEX1sgYAuizeZz2IHozOaTrSC6qsOkA0TLzZo7AUQHat6dDqKXBBxY
D6YvOG+G0Pe3Q8Qv7ITQtmch4nVg+vO5qaX9QLrv/BowXfJ9XjWI7vqTUAOi
r8voTZsMpLcuvTQDRLe9EzwJoks/rDsLoo/F5WbOBtIicU5ZIPpVVfkDEG1W
sfExiLb6t5F3LpDW+7cPTIs01y8A0TkNKxaDaKuTpU9BNJPnDjAtfVD5PYi+
4FADptu3fvgDonO38v8F0QC7esPn
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Section"],

Cell[BoxData["loadvector"], "Input",
 CellChangeTimes->{{3.4832965382440376`*^9, 3.48329654074399*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"StiffnessMatrix", ",", "loadvector"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotmatrix", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "meshconstant", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "n_", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], "]"}], 
      " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"j", " ", "=", "  ", 
     RowBox[{
      RowBox[{"Quotient", "[", 
       RowBox[{
        RowBox[{"n", " ", "-", " ", "1"}], ",", " ", "meshconstant"}], "]"}], 
      " ", "+", " ", "1"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"plotmatrix", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "j"}], "]"}], " ", "]"}], " ", "=", " ", 
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"[", "n", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      SuperscriptBox["meshconstant", "2"]}], "]"}]}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot3D", "[", "plotmatrix", "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "Automatic"}]}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Date, Time, and CPU TimeUsed of Run", "Section",
 CellChangeTimes->{{3.48329172736705*^9, 3.483291751351635*^9}, 
   3.483294199255597*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Date", " ", "and", " ", "Time", " ", "of", " ", "Run"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DateString", "[", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"CPU", " ", "time", " ", "of", " ", "Run"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"RunCPUTime", " ", "=", " ", 
    RowBox[{
     RowBox[{"TimeUsed", "[", "]"}], " ", "-", " ", "SessionCPUTime"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"RunRealTime", " ", "=", " ", 
    RowBox[{
     RowBox[{"SessionTime", "[", "]"}], " ", "-", " ", 
     "SessionRealTime"}]}]}]}]], "Input",
 CellChangeTimes->{{3.483291764257637*^9, 3.483291795507037*^9}, {
  3.483291840365551*^9, 3.4832918410999117`*^9}, {3.483292824399299*^9, 
  3.483292824633662*^9}, {3.483292960501705*^9, 3.4832930064524775`*^9}, {
  3.483293043919309*^9, 3.483293096182534*^9}, {3.4832945360662127`*^9, 
  3.483294636339538*^9}, {3.483294706751195*^9, 3.4832947090794992`*^9}, {
  3.4832975930620337`*^9, 3.4832976007028055`*^9}, {3.4832977810187674`*^9, 
  3.483297796237809*^9}, {3.483297999552088*^9, 3.483298000036463*^9}, {
  3.483298058927088*^9, 3.483298059598963*^9}}]
}, Open  ]]
},
Evaluator->"Server",
WindowSize->{643, 914},
WindowMargins->{{Automatic, 0}, {Automatic, -1}},
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 111, 1, 71, "Section"],
Cell[681, 25, 10629, 260, 1232, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11347, 290, 41, 3, 97, "Section"],
Cell[11391, 295, 2652, 46, 168, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14080, 346, 36, 0, 71, "Section"],
Cell[14119, 348, 139, 4, 31, "Input"],
Cell[14261, 354, 7526, 203, 592, "Input"],
Cell[21790, 559, 599, 17, 83, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22426, 581, 54, 0, 71, "Section"],
Cell[22483, 583, 1175, 34, 128, "Input"],
Cell[23661, 619, 243, 7, 31, "Input"],
Cell[23907, 628, 1062, 31, 108, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25006, 664, 108, 1, 71, "Section"],
Cell[25117, 667, 4609, 124, 572, "Input"],
Cell[29729, 793, 1280, 34, 132, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31046, 832, 117, 1, 71, "Section"],
Cell[31166, 835, 416, 11, 72, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31619, 851, 167, 2, 71, "Section"],
Cell[31789, 855, 9877, 242, 1126, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41703, 1102, 147, 1, 71, "Section"],
Cell[41853, 1105, 201, 5, 31, "Input"],
Cell[42057, 1112, 1434, 32, 116, "Input"],
Cell[43494, 1146, 2892, 63, 288, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46423, 1214, 110, 1, 71, "Section"],
Cell[46536, 1217, 4342, 120, 366, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50915, 1342, 51, 0, 71, "Section"],
Cell[50969, 1344, 201, 5, 31, "Input"],
Cell[51173, 1351, 1113, 26, 94, "Input"],
Cell[52289, 1379, 2774, 66, 288, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55100, 1450, 27, 0, 71, "Section"],
Cell[55130, 1452, 103, 1, 31, "Input"],
Cell[55236, 1455, 162, 4, 31, "Input"],
Cell[55401, 1461, 1187, 33, 154, "Input"],
Cell[56591, 1496, 168, 4, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56796, 1505, 145, 2, 71, "Section"],
Cell[56944, 1509, 1224, 26, 132, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
